import{r as p,m,a,O as s,e as i,J as l}from"./index-CSwUTS8E.js";import{g as n}from"./FeatureLayerViewBase3D-D30Tjep0.js";import"./HeatmapDensity.glsl-D-JiEkkr.js";import"./timeSupport-DPzJ42Yo.js";import"./utils-C5H_t_qa.js";import"./projectExtentUtils-BYvUbKZ6.js";import"./geometryServiceUtils-DOiSiYeK.js";import"./dehydratedFeatureComparison-C8XO9ar5.js";import"./utils-B4OYclEe.js";import"./queryForSymbologySnapping-BNTEjfzD.js";import"./Graphics3DFeatureProcessor-CUWNY_fc.js";import"./hash-CcEbRgUF.js";import"./renderingInfoUtils-BOfrstyj.js";import"./ExtentSet-BNBSFQDo.js";import"./optimizedFeatureQueryEngineAdapter-CaykLEw3.js";import"./centroid-DdLmOD72.js";import"./PooledRBush-Cf_PK1eh.js";import"./quickselect-QQC62dOK.js";import"./popupUtils-B3m0uZBv.js";import"./Graphics3DObjectStates-ClYMls4S.js";import"./attributeUtils-Dc8--CBJ.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./QueryEngine-CEAzQhHx.js";import"./normalizeUtils-D0g683D1.js";import"./normalizeUtilsCommon-Bwvr0mrf.js";import"./WhereClause-GDwOTh0n.js";import"./TimeOnly-CzfB2nvQ.js";import"./queryUtils-BWnhXqT2.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-DjYb9CEb.js";import"./utils-BtqY94cw.js";import"./utils-BJu0Kcx9.js";import"./utils-Yz6KS55q.js";import"./ClassBreaksDefinition-DNrQj6UG.js";import"./SnappingCandidate-O5eRSE6e.js";import"./highlightUtils-DZ-fmHje.js";import"./languageUtils-h8Wh20ql.js";import"./ImmutableArray-BPVd6ESQ.js";import"./shared-i3Cn6LI8.js";import"./number-DI43_z5i.js";import"./FeatureStore-CHe4oKQ9.js";import"./BoundsStore-DFe7uEBJ.js";import"./LayerView3D-BHMn4seZ.js";import"./query-tsonVu_a.js";import"./pbfQueryUtils-imSrhCv4.js";import"./pbf-lX5xCyrP.js";import"./WorkerHandle-CPxoOjn8.js";import"./EventedSet-CCfvqiKg.js";import"./LayerView-DTYHtUsX.js";import"./RefreshableLayerView-C140zzMp.js";let t=class extends n{constructor(){super(...arguments),this.type="feature-3d"}initialize(){var o;const{layer:e,view:r}=this;(o=s(e))!=null&&o.operations.supportsQuery||this.addResolvingPromise(Promise.reject(new i("featurelayerview:query-not-supported","layer view requires a layer with query capability",{layer:e}))),e.infoFor3D!=null&&this.addResolvingPromise(Promise.reject(new i("featurelayerview3d:unsupported-geometry-type",`Unsupported geometry type ${e.geometryType}`))),e.geometryType!=="mesh"||l(e.spatialReference,r.spatialReference)||this.addResolvingPromise(Promise.reject(new i("layerview:spatial-reference-incompatible","The spatial references of the feature layer is incompatible with the spatial reference of the view")))}get featureSpatialReference(){var e,r;return(r=(e=this.view.featureTiles)==null?void 0:e.tilingScheme)==null?void 0:r.spatialReference}};p([m()],t.prototype,"layer",void 0),t=p([a("esri.views.3d.layers.FeatureLayerView3D")],t);const ae=t;export{ae as default};
