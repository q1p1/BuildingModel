import{r as p,m,a,O as s,e as i,J as l}from"./index-BQRGWQBl.js";import{g as n}from"./FeatureLayerViewBase3D-hRrGHzj-.js";import"./HeatmapDensity.glsl-DjhgRhkY.js";import"./timeSupport-_0G3NqlC.js";import"./utils-C-vgM8OY.js";import"./projectExtentUtils-DhXGOZIt.js";import"./geometryServiceUtils-B1nbMsFG.js";import"./dehydratedFeatureComparison-BkoQ2VKo.js";import"./utils-BqwpYlqx.js";import"./queryForSymbologySnapping-CihsxPza.js";import"./Graphics3DFeatureProcessor-DpeBQLaK.js";import"./hash-CcEbRgUF.js";import"./renderingInfoUtils-ByCkAONA.js";import"./ExtentSet-CYuZI18b.js";import"./optimizedFeatureQueryEngineAdapter-yE__KD_0.js";import"./centroid-DdLmOD72.js";import"./PooledRBush-DuYLSJ9Z.js";import"./quickselect-QQC62dOK.js";import"./popupUtils-BObEBFdB.js";import"./Graphics3DObjectStates-BcuKbBeI.js";import"./attributeUtils-Dc8--CBJ.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./QueryEngine-Be6Z__Gs.js";import"./normalizeUtils-BHxDaJmG.js";import"./normalizeUtilsCommon-CI6wbnPg.js";import"./WhereClause-FkmNLuKN.js";import"./TimeOnly-BPDGIqro.js";import"./queryUtils-DBpwR_2X.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-DjYb9CEb.js";import"./utils-BZ5T87HL.js";import"./utils-BzEEKAov.js";import"./utils-CrfTKMs_.js";import"./ClassBreaksDefinition-CbdNKwye.js";import"./SnappingCandidate-O5eRSE6e.js";import"./highlightUtils-uuwPx8DA.js";import"./languageUtils-SXYRDF92.js";import"./ImmutableArray-BPVd6ESQ.js";import"./shared-B1VOJ2xC.js";import"./number-BetiEiWA.js";import"./FeatureStore-Baw93Y9o.js";import"./BoundsStore-Drtj1Q5I.js";import"./LayerView3D-GOrLzpMU.js";import"./query-Bc00zrYh.js";import"./pbfQueryUtils-NQDV1iPZ.js";import"./pbf-BZvduD4b.js";import"./WorkerHandle-DsdljzOt.js";import"./EventedSet-BFl8pZA9.js";import"./LayerView-Cy5l-uKP.js";import"./RefreshableLayerView-BUI7oolJ.js";let t=class extends n{constructor(){super(...arguments),this.type="feature-3d"}initialize(){var o;const{layer:e,view:r}=this;(o=s(e))!=null&&o.operations.supportsQuery||this.addResolvingPromise(Promise.reject(new i("featurelayerview:query-not-supported","layer view requires a layer with query capability",{layer:e}))),e.infoFor3D!=null&&this.addResolvingPromise(Promise.reject(new i("featurelayerview3d:unsupported-geometry-type",`Unsupported geometry type ${e.geometryType}`))),e.geometryType!=="mesh"||l(e.spatialReference,r.spatialReference)||this.addResolvingPromise(Promise.reject(new i("layerview:spatial-reference-incompatible","The spatial references of the feature layer is incompatible with the spatial reference of the view")))}get featureSpatialReference(){var e,r;return(r=(e=this.view.featureTiles)==null?void 0:e.tilingScheme)==null?void 0:r.spatialReference}};p([m()],t.prototype,"layer",void 0),t=p([a("esri.views.3d.layers.FeatureLayerView3D")],t);const ae=t;export{ae as default};
