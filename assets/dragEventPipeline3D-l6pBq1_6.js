import{dg as D,dh as m,di as E,dj as w,dk as S,dl as y,dm as N,as as $,bH as d,dn as R,dp as H,dq as M,dr as C,de as A,df as G,ds as P,cM as I,dt as g,du as U,dv as h,dw as k,dx as F,dy as q,dz as z,dA as j,dB as T,dC as B,cz as J}from"./index-G3D84UsQ.js";import{w as K}from"./ShadedColorMaterial.glsl-BcGXjCHM.js";function L(n,r){return v(n,()=>r)}function en(n){return v(n,r=>r.plane)}function v(n,r){const t=d(),s=d();let l=!1;return e=>{const o=r(e);if(e.action==="start"){const c=m(e.screenStart,E(w.get())),u=S(n.state.camera,c,x);u!=null&&(l=y(o,u,t))}if(!l)return null;const a=m(e.screenEnd,E(w.get())),i=S(n.state.camera,a,x);return i==null?null:y(o,i,s)?{...e,renderStart:t,renderEnd:s,plane:o,ray:i}:null}}function Q(n,r,t=0,s=null,l=null){let e=null;return o=>{if(o.action==="start"&&(e=n.sceneIntersectionHelper.intersectElevationFromScreen(R(o.screenStart.x,o.screenStart.y),r,t,l),e!=null&&s!=null&&!H(e,e,s))||e==null)return null;const a=n.sceneIntersectionHelper.intersectElevationFromScreen(R(o.screenEnd.x,o.screenEnd.y),r,t,l);return a!=null&&(s==null||H(a,a,s))?{...o,mapStart:e,mapEnd:a}:null}}function _(n,r,t,s=null,l=null){return Q(n,t,N(r,n,t),s,l)}function tn(n,r,t,s){const l=t.toMap(n.screenStart);return l!=null?_(r,l,t.elevationInfo,s):null}function V(n,r){const t=O,s=b,l=P();n.renderCoordsHelper.worldUpAtPosition(r,t);const e=I(U(l),t,g(s,r,n.state.camera.eye));return I(e,e,t),h(r,e,l)}function rn(n,r,t){let s=null;const l=new K;return l.next(L(n,V(n,r))).next(W(n,r)).next(X(n,t)).next(e=>{e.mapEnd.x=e.mapStart.x,e.mapEnd.y=e.mapStart.y,s=e}),e=>(s=null,l.execute(e),s)}function W(n,r){const t=d(),s=M(r);n.renderCoordsHelper.worldUpAtPosition(r,t);const l=d(),e=d(),o=a=>(g(a,a,r),k(t,a,a),n.viewingMode==="global"&&M(a)*Math.sign(F(t,a))<.001-s&&g(a,q(a,t,.001),r),z(a,a,r),a);return a=>(a.renderStart=o(C(l,a.renderStart)),a.renderEnd=o(C(e,a.renderEnd)),a)}function sn(n,r){const t=s=>{const l=m(s,E(Y)),e=S(n.state.camera,l,x);if(e==null)return null;const o=j(r,e,O,b);return o==null?void 0:o[0]};return s=>{const l=t(s.screenStart);if(l==null)return null;const e=t(s.screenEnd);return e==null?null:{...s,renderStart:l,renderEnd:e}}}function X(n,r){const t=n.renderCoordsHelper;return s=>{const l=t.fromRenderCoords(s.renderStart,new $({spatialReference:r})),e=t.fromRenderCoords(s.renderEnd,new $({spatialReference:r}));return l!=null&&e!=null?{...s,mapStart:l,mapEnd:e}:null}}var f;function ln(n){let r=null;return t=>{switch(t.action){case"start":r=n.disableDisplay();break;case"end":case"cancel":r!=null&&(r.remove(),r=null)}return t}}function an(n,r=null){const t=A(n.state.viewingMode);t.options.selectionMode=!0,t.options.store=G.MIN,t.options.hud=!1;const s=R(),l={requiresGroundFeedback:!0,enableDraped:!0,exclude:new Set},e=d(),o=r??n.spatialReference,a=c=>{n.map.ground&&n.map.ground.opacity<1?l.exclude.add(T):l.exclude.delete(T),n.sceneIntersectionHelper.intersectIntersectorScreen(m(c,s),t,l);const u=t.results.min;let p;if(u.getIntersectionPoint(e))p=u.intersector===B.TERRAIN?f.GROUND:f.OTHER;else{if(!t.results.ground.getIntersectionPoint(e))return null;p=f.GROUND}return{location:n.renderCoordsHelper.fromRenderCoords(e,new $({spatialReference:o})),surfaceType:p}};let i;return c=>{if(c.action==="start"){const p=a(c.screenStart);i=p!=null?p.location:null}if(i==null)return null;const u=a(c.screenEnd);return(u==null?void 0:u.location)!=null?{...c,mapStart:i,mapEnd:u.location,surfaceType:u.surfaceType}:null}}(function(n){n[n.GROUND=0]="GROUND",n[n.OTHER=1]="OTHER"})(f||(f={}));const Y=J(),O=d(),b=d(),x=D();export{sn as A,an as B,L as C,X as F,rn as G,_ as M,tn as N,en as P,ln as z};
