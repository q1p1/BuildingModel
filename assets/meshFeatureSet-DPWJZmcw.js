import{aS as h,av as y,L as S,ap as g,bE as l,z as N}from"./index-DTNfjJk8.js";import{$ as E}from"./Mesh-BbPynpyp.js";import{i as D,a as M}from"./External-CnjKKyea.js";import{s as F}from"./infoFor3D-CxdEiWhp.js";import{n as T,i as w}from"./meshFeatureAttributes-BwKoqD1a.js";import"./MeshComponent-FXtpTRyn.js";import"./meshProperties-C4iW0Ukm.js";import"./MeshTransform-GaWB7N7y.js";import"./MeshVertexAttributes-DAJ6NSjK.js";import"./triangulationUtils-C5jUdjuf.js";import"./earcut-Lltz9D9k.js";import"./deduplicate-DU0OCo3Z.js";import"./vertexSpaceConversion-Pszv1_4i.js";import"./vec4-BRWJdoO5.js";const I=()=>N.getLogger("esri.rest.support.meshFeatureSet");function j(e,s,t){const r=t.features;t.features=[],delete t.geometryType;const o=h.fromJSON(t);if(o.geometryType="mesh",!t.assetMaps)return o;const n=O(s,t.assetMaps),i=e.sourceSpatialReference??y.WGS84,f=t.globalIdFieldName,{outFields:a}=e,c=a!=null&&a.length>0?L(a.includes("*")?null:new Set(a)):()=>({});for(const u of r){const p=b(u,f,i,s,n);o.features.push(new S({geometry:p,attributes:c(u)}))}return o}function L(e){return({attributes:s})=>{if(!s)return{};if(!e)return s;for(const t in s)e.has(t)||delete s[t];return s}}function b(e,s,t,r,o){const n=e.attributes[s],i=o.get(n);if(i==null||!e.geometry)return null;const f=T(e.attributes,t,r.transformFieldRoles),a=g.fromJSON(e.geometry);a.spatialReference=t;const c=w(e.attributes,r.transformFieldRoles),u=t.isGeographic?"local":"georeferenced",p=P(i);return p?E.createWithExternalSource(f,p,{extent:a,transform:c,vertexSpace:u,unitConversionDisabled:!0}):E.createIncomplete(f,{extent:a,transform:c,vertexSpace:u})}var m;function O(e,s){const t=new Map;for(const r of s){const o=r.parentGlobalId;if(o==null)continue;const n=r.assetName,i=r.assetType,f=r.assetHash,a=r.assetURL,c=r.conversionStatus,u=r.seqNo,p=F(i,e.supportedFormats);if(!p){I().error("mesh-feature-set:unknown-format",`Service returned an asset of type ${i}, but it does not list it as a supported type`);continue}const d=l(t,o,()=>({files:new Map}));l(d.files,n,()=>({name:n,type:i,mimeType:p,status:$(c),parts:[]})).parts[u]={hash:f,url:a}}return t}function P(e){const s=Array.from(e.files.values()),t=new Array;for(const r of s){if(r.status!==m.COMPLETED)return null;const o=new Array;for(const n of r.parts){if(!n)return null;o.push(new D(n.url,n.hash))}t.push(new M(r.name,r.mimeType,o))}return t}function $(e){switch(e){case"COMPLETED":case"SUBMITTED":return m.COMPLETED;case"INPROGRESS":return m.PENDING;default:return m.FAILED}}(function(e){e[e.FAILED=0]="FAILED",e[e.PENDING=1]="PENDING",e[e.COMPLETED=2]="COMPLETED"})(m||(m={}));export{O as assetMapFromAssetMapsJSON,b as extractMesh,j as meshFeatureSetFromJSON};
