import{jT as x,cV as Q,oz as D,oA as W,oB as G,oC as H,gG as z,bH as C,jR as A,cz as N,cv as B,cA as X,cB as Y,cy as Z,e1 as ee,dt as te,cO as se,oD as ie,b as re,V as ne,r as S,m as q,a as oe}from"./index-CBbuaskE.js";import{x as y,N as f,y as P,i as v,c as p,z as $,p as F,u as J,l as ae,J as he,d as I,A as de,B as L,e as ce,f as le,o as pe,C as ge,b as fe,E as ue}from"./SnappingManagerPool-Brb-IYMh.js";import{y as R,M as U}from"./angularMeasurementUtils-0ZXnmfv2.js";import{u as K}from"./geodesicLengthMeasurementUtils-D1k3DWK8.js";import{j as xe,I as M,N as ve}from"./geometry2dUtils-CtuVmlkd.js";import"./keybindings-692D0c4Y.js";import"./utils-Ct1N0W19.js";import"./viewUtils-Dw4_uu4c.js";import"./geometryEngine-BJSIpBDH.js";import"./geometryEngineBase-yFIvKOkM.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./hydrated-BJDSlwIU.js";class k{constructor(s,e){this.view=s,this.options=e,this.squaredShortLineThreshold=y.shortLineThreshold*y.shortLineThreshold}snap(s,e){return e.vertexHandle!=null?e.vertexHandle.type!=="vertex"?[]:this.snapExistingVertex(s,e):this.snapNewVertex(s,e)}edgeExceedsShortLineThreshold(s,e){return this.exceedsShortLineThreshold(f(s.leftVertex.pos,this.view,e),f(s.rightVertex.pos,this.view,e),e)}exceedsShortLineThreshold(s,e,{spatialReference:t}){return this.squaredShortLineThreshold===0||P(v(e,t,x,this.view),v(s,t,x,this.view))>this.squaredShortLineThreshold}isVertical(s,e,{spatialReference:t}){const i=Q(t);return D(p(s),p(e))*i<y.verticalLineThresholdMeters}squaredProximityThreshold(s){return s==="touch"?this._squaredTouchProximityThreshold:this._squaredMouseProximityThreshold}get _squaredMouseProximityThreshold(){return this.options.distance*this.options.distance}get _squaredTouchProximityThreshold(){const{distance:s,touchSensitivityMultiplier:e}=this.options,t=s*e;return t*t}}class me extends k{snapNewVertex(s,e){const t=e.editGeometryOperations.data.components[0],i=t.edges.length,r=[];if(i<1)return r;const{spatialReference:n}=e,a=v(s,n,x,this.view),{view:o}=this,h=t.edges[i-1];let d=h;do{if(this.edgeExceedsShortLineThreshold(d,e)){const g=$(d,o,e);this._processCandidateProposal(g.left,g.right,s,a,e,r)}d=d.leftVertex.leftEdge}while(d&&d!==h);return r}snapExistingVertex(s,e){const t=[],i=e.vertexHandle,r=i.component;if(r.edges.length<2)return t;const{view:n}=this,{spatialReference:a}=e,o=v(s,a,x,n),h=i.leftEdge,d=i.rightEdge;h&&d&&this.edgeExceedsShortLineThreshold(h,e)&&this.edgeExceedsShortLineThreshold(d,e)&&this._processCandidateProposal(f(h.leftVertex.pos,n,e),f(d.rightVertex.pos,n,e),s,o,e,t);const g=r.edges[0];let l=g;do{if(l!==i.leftEdge&&l!==i.rightEdge&&this.edgeExceedsShortLineThreshold(l,e)){const u=$(l,n,e);this._processCandidateProposal(u.left,u.right,s,o,e,t)}l=l.rightVertex.rightEdge}while(l&&l!==g);return t}_processCandidateProposal(s,e,t,i,r,n){var g;const{spatialReference:a,pointer:o}=r,h=C();Ee(h,s,e,t,r);const d=F(J(h));P(i,v(d,a,x,this.view))<this.squaredProximityThreshold(o)&&n.push(new ae({lineStart:s,lineEnd:e,targetPoint:d,isDraped:((g=r.elevationInfo)==null?void 0:g.mode)==="on-the-ground"}))}}function Ee(c,s,e,t,i){we(c,s,e,t,i)||Ve(c,t,s,e)}function we(c,s,e,t,{spatialReference:i}){const r=R(s,e,i,i);if(r==null)return!1;const n=R(e,t,i,i);if(n==null)return!1;const a=K(e,t,i);if(a==null)return!1;const o=Math.abs(W.shortestSignedDiff(r,n))>Math.PI/2?G.normalize(r+Math.PI):r;return U(c,e,i,H(a,"meters"),z(o,"radians","geographic"),"geodesic"),c[2]=t[2],!0}function Ve(c,s,e,t){he(s,{start:e,end:t,type:xe.LINE},c),c[2]=s[2]}let ye=class extends k{snapNewVertex(s,e){const t=e.editGeometryOperations.data.components[0],i=t.edges.length,r=t.vertices.length,n=[];if(i<2)return n;const{view:a}=this,o=v(s,e.spatialReference,x,a),h=f(t.vertices[r-1].pos,a,e),d=f(t.vertices[0].pos,a,e),g=t.edges[i-1];let l=g;do{if(this.edgeExceedsShortLineThreshold(l,e)){const u=$(l,a,e);this._checkEdgeForParallelLines(u,h,s,o,e,n),this._checkEdgeForParallelLines(u,d,s,o,e,n)}l=l.leftVertex.leftEdge}while(l&&l!==g);return n}snapExistingVertex(s,e){const t=[],i=e.vertexHandle,r=i.component;if(r.edges.length<3)return t;const{view:n}=this,a=v(s,e.spatialReference,x,n),o=i.leftEdge,h=i.rightEdge,d=r.vertices[0],g=f(d.pos,n,e),l=r.vertices.length,u=r.vertices[l-1],w=f(u.pos,n,e),T=r.edges[0];let m=T;do{if(m!==o&&m!==h&&this.edgeExceedsShortLineThreshold(m,e)){const _=$(m,n,e);o&&this._checkEdgeForParallelLines(_,f(o.leftVertex.pos,n,e),s,a,e,t),h&&this._checkEdgeForParallelLines(_,f(h.rightVertex.pos,n,e),s,a,e,t),i===d?this._checkEdgeForParallelLines(_,w,s,a,e,t):i===u&&this._checkEdgeForParallelLines(_,g,s,a,e,t)}m=m.rightVertex.rightEdge}while(m&&m!==T);return t}_checkEdgeForParallelLines(s,e,t,i,r,n){var l;const a=s.left,o=s.right;if(M(E,p(e),p(a),p(o)),A(E,p(e))<y.parallelLineThreshold)return;M(E,p(t),p(a),p(o),p(e));const{spatialReference:h,pointer:d}=r,g=F(I(E[0],E[1],t[2]));if(P(i,v(g,h,x,this.view))<this.squaredProximityThreshold(d)){if(this.isVertical(g,e,r)||this.isVertical(a,o,r)||Pe(s,n))return;n.push(new de({referenceLine:s,lineStart:e,targetPoint:g,isDraped:((l=r.elevationInfo)==null?void 0:l.mode)==="on-the-ground"}))}}};function Pe(c,s){const e=c.left,t=c.right;for(const i of s)if(M(E,p(t),p(i.constraint.start),p(i.constraint.end),p(e)),A(E,p(t))<y.parallelLineThreshold)return i.addReferenceLine(c),!0;return!1}const E=N();class Te extends k{snapNewVertex(s,e){const t=e.editGeometryOperations.data.components[0],i=[];if(t.vertices.length<2)return i;const{view:r}=this,n=v(s,e.spatialReference,x,r),a=t.vertices.at(-1);this._checkForSnappingCandidate(L.LastVertex,i,a.leftEdge,a,a.leftEdge.leftVertex,s,n,e);const o=t.vertices[0];return this._checkForSnappingCandidate(L.FirstVertex,i,o.rightEdge,o,o.rightEdge.rightVertex,s,n,e),i}snapExistingVertex(s,e){const t=[],i=e.vertexHandle;if(i.component.vertices.length<3)return t;const{view:r}=this,n=v(s,e.spatialReference,x,r),a=i.leftEdge,o=i.rightEdge;if(a!=null&&a.leftVertex.leftEdge){const h=a.leftVertex.leftEdge;this._checkForSnappingCandidate(L.ExistingEdge,t,h,h.rightVertex,h.leftVertex,s,n,e)}if(o!=null&&o.rightVertex.rightEdge){const h=o.rightVertex.rightEdge;this._checkForSnappingCandidate(L.ExistingEdge,t,h,h.leftVertex,h.rightVertex,s,n,e)}return t}_checkForSnappingCandidate(s,e,t,i,r,n,a,o){if(!this.edgeExceedsShortLineThreshold(t,o))return;const h=this.view,d=f(i.pos,h,o),g=f(r.pos,h,o);_e(O,g,d,n,o),this._checkForSnappingCandidateAlongProjectedRay(s,e,g,d,O,n,a,o)}_checkForSnappingCandidateAlongProjectedRay(s,e,t,i,r,n,a,o){var m;const{spatialReference:h,pointer:d}=o,g=B(j,p(n),p(i)),l=X(r,g)/Y(r),u=Z(j,p(i),r,l),w=F(I(u[0],u[1],n[2]));if(P(a,v(w,h,x,this.view))>this.squaredProximityThreshold(d)||this.isVertical(w,i,o)||this.isVertical(i,t,o))return;const T=ee(C(),i,r,Math.sign(l));e.push(new ce({targetPoint:w,constraint:new le(i,J(T)),previousVertex:t,otherVertex:i,otherVertexType:pe.CENTER,selfSnappingType:s,isDraped:((m=o.elevationInfo)==null?void 0:m.mode)==="on-the-ground"}))}}function _e(c,s,e,t,i){Se(c,s,e,t,i)||Le(c,s,e)}function Se(c,s,e,t,{spatialReference:i}){const r=R(s,e,i,i);if(r==null)return!1;const n=R(e,t,i,i);if(n==null)return!1;const a=Math.sign(G.shortestSignedDiff(r,n))*Math.PI*.5,o=z(r+a,"radians","geographic"),h=C(),d=K(e,t,i);return d!=null&&(U(h,e,i,H(d,"meters"),o,"geodesic"),te(c,h,e),!0)}function Le(c,s,e){const t=B(j,p(e),p(s));se(c,t[1],-t[0],0)}const j=N(),O=C();let $e=class extends k{snapNewVertex(s,e){const t=e.editGeometryOperations.data.components[0],i=[],r=t.vertices.length;if(e.editGeometryOperations.data.type!=="polygon"||r<2)return i;const{view:n}=this,a=t.vertices[0],o=t.vertices[r-1],h=f(a.pos,n,e),d=f(o.pos,n,e);return this._processCandidateProposal(h,d,s,e,i),i}snapExistingVertex(s,e){const t=[],i=e.vertexHandle,r=i.component;if(r.edges.length<2||e.editGeometryOperations.data.type==="polyline"&&(i.index===0||i.index===r.vertices.length-1))return t;const{view:n}=this,a=f(i.leftEdge.leftVertex.pos,n,e),o=f(i.rightEdge.rightVertex.pos,n,e);return this._processCandidateProposal(a,o,s,e,t),t}_processCandidateProposal(s,e,t,i,r){var u;if(!this.exceedsShortLineThreshold(s,e,i))return;const n=ie(b,p(s),p(e),.5),a=.5*D(p(s),p(e)),o=ve(b,p(t),n,a),h=F(I(o[0],o[1],t[2])),{spatialReference:d,pointer:g}=i,l=v(t,d,x,this.view);if(P(l,v(h,d,x,this.view))<this.squaredProximityThreshold(g)){if(this.isVertical(s,h,i)||this.isVertical(h,e,i))return;r.push(new ge({targetPoint:h,point1:s,point2:e,isDraped:((u=i.elevationInfo)==null?void 0:u.mode)==="on-the-ground"}))}}};const b=N();let V=class extends re{constructor(c){super(c),this.updating=!1,this._snappers=new ne,this._domain=fe.SELF}initialize(){this._snappers.push(new ye(this.view,this.options),new me(this.view,this.options),new Te(this.view,this.options),new $e(this.view,this.options))}set options(c){this._set("options",c);for(const s of this._snappers)s.options=c}async fetchCandidates(c,s,e){if(!(s&this._domain&&this.options.effectiveSelfEnabled))return[];const t=[];for(const i of this._snappers.items)for(const r of i.snap(c,e))t.push(r);return ue(c,t),t}};S([q({readOnly:!0})],V.prototype,"updating",void 0),S([q({constructOnly:!0})],V.prototype,"view",void 0),S([q()],V.prototype,"options",null),V=S([oe("esri.views.interactive.snapping.SelfSnappingEngine")],V);export{V as SelfSnappingEngine};
