import{H as p,I as m,K as l,P as n,L as d,r as i,m as e,M as h,a as u}from"./index-pOkNMSkH.js";import{T as c}from"./I3SMeshView3D-1jEi2yVJ.js";import{l as g}from"./LayerView3D-ChJeke1e.js";import{y}from"./LayerView-Da_1He01.js";import"./languageUtils-CrGoFNJp.js";import"./TimeOnly-DtwEOrV3.js";import"./ImmutableArray-BPVd6ESQ.js";import"./shared-Ctlar3ob.js";import"./number-DY5_ZXb0.js";import"./Transform-BF-P4iIM.js";import"./RenderTexture-Bs_I1eXQ.js";import"./I3SOverrides-DGPnI-xT.js";import"./resourceUtils-BsADwHPp.js";import"./I3SNode-x77qoqkT.js";import"./I3SUtil-BsLhCnbL.js";import"./I3SBinaryReader-CW-GqQcq.js";import"./ReactiveSet-CksC07MN.js";import"./meshFeatureSet-CqOqqVDU.js";import"./Mesh-DSoG0q0b.js";import"./MeshComponent-DHZCrxGf.js";import"./meshProperties-C4iW0Ukm.js";import"./MeshTransform-DT1t7Zdb.js";import"./MeshVertexAttributes-7ZqsXt9m.js";import"./triangulationUtils-SZGRFYHE.js";import"./earcut-Lltz9D9k.js";import"./deduplicate-CPn8S1hQ.js";import"./vertexSpaceConversion-BaHBu6NW.js";import"./vec4-B794kZFC.js";import"./External-BPHrEtHD.js";import"./infoFor3D-CxdEiWhp.js";import"./meshFeatureAttributes-CGtbUn9x.js";import"./SceneModification-C1LjB1We.js";import"./persistable-Bp6kWnge.js";import"./resourceExtension-CCRzBSLp.js";import"./ExtentSet-3acE0Xrf.js";import"./optimizedFeatureQueryEngineAdapter-BBnAuhfW.js";import"./centroid-DdLmOD72.js";import"./PooledRBush-BLgz4_xp.js";import"./quickselect-QQC62dOK.js";import"./popupUtils-CaLqO6dx.js";import"./WorkerHandle-MabGnYVI.js";import"./SceneLayerWorker-D29HPjmS.js";import"./attributeUtils-Dc8--CBJ.js";import"./highlightUtils-eA5M_joT.js";import"./makeScheduleFunction-CggzEh3c.js";const f=.2;let t=class extends c(g(y)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this._applySSAO=!p("disable-feature:im-ssao"),this._shadeNormals=!!p("enable-feature:im-shading"),this.drapeTargetType=m.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var r;return((r=this._controller)==null?void 0:r.updatingProgress)??0}get lodFactor(){var r,o,a,s;return((s=(a=(o=(r=this.view)==null?void 0:r.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?f:1}get visibleAtCurrentScale(){return l(this.i3slayer.effectiveScaleRange,this.view.scale)}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),n),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){return new d({layer:this.layer,sourceLayer:this.layer})}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const r=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>r,()=>this._modifications=r.toArray(),n),"modifications")}};i([e()],t.prototype,"layer",void 0),i([e()],t.prototype,"i3slayer",null),i([e(h)],t.prototype,"updatingProgress",void 0),i([e()],t.prototype,"updatingProgressValue",null),i([e()],t.prototype,"lodFactor",null),i([e({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),i([e({readOnly:!0})],t.prototype,"visibleAtCurrentScale",null),t=i([u("esri.views.3d.layers.IntegratedMeshLayerView3D")],t);const mt=t;export{mt as default};
