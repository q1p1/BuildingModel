import{eB as st,e as P,gC as K,ip as q,iq as at,cl as it,av as L,ir as ot,dd as rt,at as ct,v as ht,cv as lt,is as ut,dr as ft,it as pt,bH as Q,iu as V}from"./index-CXNGdYBO.js";function X(t){if(!t)return null;const n=t.wkid;if(n)return at[n];const e=t.wkt2??t.wkt;return e?Mt(e):null}function Mt(t){const n=ot.exec(t);if(!n||n.length!==2)return null;const e=n[1].split(",");if(!e||e.length<3)return null;const i=parseFloat(e[1]),s=parseFloat(e[2]);return isNaN(i)||isNaN(s)?null:{a:i,f:s===0?0:1/s}}function O(t){const n=X(t);if(dt(n))return n;const e=n.a*(1-n.f);return Object.assign(n,{b:e,eSq:1-(e/n.a)**2,radius:(2*n.a+e)/3,densificationRatio:1e4/((2*n.a+e)/3)})}function dt(t){return t!=null&&"b"in t&&"eSq"in t&&"radius"in t}function G(t,n,e){const{a:i,eSq:s}=O(e),a=Math.sqrt(s),o=Math.sin(n[1]*q),l=i*n[0]*q;let c;return s>0?c=i*((1-s)*(o/(1-s*(o*o))-1/(2*a)*Math.log((1-a*o)/(1+a*o))))*.5:c=i*o,t[0]=l,t[1]=c,t}function E(t){return st(t)&&!!X(t)}function wt(t,n="square-meters"){if(t.some(o=>!E(o.spatialReference)))throw new P("geodesic-areas:invalid-spatial-reference","the input geometries spatial reference is not supported");const e=[];for(let o=0;o<t.length;o++){const l=t[o],c=l.spatialReference,{radius:h,densificationRatio:u}=O(c),r=h*u;e.push(gt(l,r))}const i=[],s=[0,0],a=[0,0];for(let o=0;o<e.length;o++){const{rings:l,spatialReference:c}=e[o];let h=0;for(let u=0;u<l.length;u++){const r=l[u];G(s,r[0],c),G(a,r[r.length-1],c);let M=a[0]*s[1]-s[0]*a[1];for(let d=0;d<r.length-1;d++)G(s,r[d+1],c),G(a,r[d],c),M+=a[0]*s[1]-s[0]*a[1];h+=M}h=K(h,"square-meters",n),i.push(h/-2)}return i}function yt(t,n="meters"){if(!t)throw new P("geodesic-lengths:invalid-geometries","the input geometries type is not supported");if(t.some(i=>!E(i.spatialReference)))throw new P("geodesic-lengths:invalid-spatial-reference","the input geometries spatial reference is not supported");const e=[];for(let i=0;i<t.length;i++){const s=t[i],{spatialReference:a}=s,o=s.type==="polyline"?s.paths:s.rings;let l=0;for(let c=0;c<o.length;c++){const h=o[c];let u=0;for(let r=1;r<h.length;r++){const M=h[r-1][0],d=h[r][0],m=h[r-1][1],g=h[r][1];if(m!==g||M!==d){const p=new Y;Z(p,[M,m],[d,g],a),u+=p.distance}}l+=u}l=K(l,"meters",n),e.push(l)}return e}function gt(t,n){if(t.type!=="polyline"&&t.type!=="polygon")throw new P("geodesic-densify:invalid-geometry","the input geometry is neither polyline nor polygon");const{spatialReference:e}=t;if(!E(e))throw new P("geodesic-densify:invalid-spatial-reference","the input geometry spatial reference is not supported");const i=t.type==="polyline"?t.paths:t.rings,s=[],a=[0,0],o=new Y;for(const c of i){const h=[];s.push(h),h.push([c[0][0],c[0][1]]);let u,r,M=c[0][0],d=c[0][1];for(let m=0;m<c.length-1;m++){if(u=c[m+1][0],r=c[m+1][1],M===u&&d===r)continue;const g=[M,d];Z(o,[M,d],[u,r],e);const{azimuth:p,distance:y}=o,v=y/n;if(v>1){for(let S=1;S<=v-1;S++)B(a,g,p,S*n,e),h.push(a.slice());B(a,g,p,(y+Math.floor(v-1)*n)/2,e),h.push(a.slice())}B(a,g,p,y,e),h.push(a.slice()),M=a[0],d=a[1]}}const l=rt(L,e);return t.type==="polyline"?new ct({paths:s,spatialReference:l}):new ht({rings:s,spatialReference:l})}class Y{constructor(n=0,e=void 0,i=void 0){this.distance=n,this.azimuth=e,this.reverseAzimuth=i}}function B(t,n,e,i,s){const a=n[0],o=n[1],l=a*q,c=o*q,h=(e??0)*q,{a:u,b:r,f:M}=O(s),d=Math.sin(h),m=Math.cos(h),g=(1-M)*Math.tan(c),p=1/Math.sqrt(1+g*g),y=g*p,v=Math.atan2(g,m),S=p*d,A=S*S,z=1-A,f=z*(u*u-r*r)/(r*r),k=1+f/16384*(4096+f*(f*(320-175*f)-768)),x=f/1024*(256+f*(f*(74-47*f)-128));let R,$,w,C,j=i/(r*k),b=2*Math.PI;for(;Math.abs(j-b)>1e-12;)w=Math.cos(2*v+j),R=Math.sin(j),$=Math.cos(j),C=x*R*(w+x/4*($*(2*w*w-1)-x/6*w*(4*R*R-3)*(4*w*w-3))),b=j,j=i/(r*k)+C;const N=y*R-p*$*m,F=Math.atan2(y*$+p*R*m,(1-M)*Math.sqrt(A+N*N)),H=Math.atan2(R*d,p*$-y*R*m),I=M/16*z*(4+M*(4-3*z)),T=F/q,U=(l+(H-(1-I)*M*S*(j+I*R*(w+I*$*(2*w*w-1)))))/q;return t[0]=U,t[1]=T,t}function Z(t,n,e,i){const s=n[0]*q,a=n[1]*q,o=e[0]*q,l=e[1]*q,{a:c,b:h,f:u,radius:r}=O(i),M=o-s,d=Math.atan((1-u)*Math.tan(a)),m=Math.atan((1-u)*Math.tan(l)),g=Math.sin(d),p=Math.cos(d),y=Math.sin(m),v=Math.cos(m);let S,A,z,f,k,x,R,$,w,C,j=1e3,b=M;do{if(R=Math.sin(b),$=Math.cos(b),z=Math.sqrt(v*R*(v*R)+(p*y-g*v*$)*(p*y-g*v*$)),z===0)return t.distance=0,t.azimuth=void 0,t.reverseAzimuth=void 0,t;k=g*y+p*v*$,x=Math.atan2(z,k),w=p*v*R/z,A=1-w*w,f=k-2*g*y/A,isNaN(f)&&(f=0),C=u/16*A*(4+u*(4-3*A)),S=b,b=M+(1-C)*u*w*(x+C*z*(f+C*k*(2*f*f-1)))}while(Math.abs(b-S)>1e-12&&--j>0);if(j===0){const U=r,_=Math.acos(Math.sin(a)*Math.sin(l)+Math.cos(a)*Math.cos(l)*Math.cos(o-s))*U,W=o-s,tt=Math.sin(W)*Math.cos(l),et=Math.cos(a)*Math.sin(l)-Math.sin(a)*Math.cos(l)*Math.cos(W),nt=Math.atan2(tt,et);return t.azimuth=nt/q,t.distance=_,t.reverseAzimuth=void 0,t}const N=A*(c*c-h*h)/(h*h),F=N/1024*(256+N*(N*(74-47*N)-128)),H=h*(1+N/16384*(4096+N*(N*(320-175*N)-768)))*(x-F*z*(f+F/4*(k*(2*f*f-1)-F/6*f*(4*z*z-3)*(4*f*f-3)))),I=Math.atan2(v*Math.sin(b),p*y-g*v*Math.cos(b)),T=Math.atan2(p*Math.sin(b),p*y*Math.cos(b)-g*v);return t.azimuth=I/q,t.distance=H,t.reverseAzimuth=T/q,t}function Rt(t){return E(t)?t:it(t)?L.WGS84:null}function qt(t,n,e,i){e.projectToRenderScreen(t,D),e.projectToRenderScreen(n,J),lt(i,J,D),ut(i,i)}function zt(t,n,e,i,s=Q()){const a=ft(mt,t);return a[2]=pt(i,a,n,e)||0,i.renderCoordsHelper.toRenderCoords(a,n,s),s}const mt=Q(),D=V(),J=V();export{Rt as N,yt as R,Y as b,zt as i,B as j,qt as n,Z as q,wt as v,E as y};
