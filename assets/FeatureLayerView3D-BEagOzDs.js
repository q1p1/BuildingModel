import{r as p,m,a,O as s,e as i,J as l}from"./index-HdUx8m3z.js";import{g as n}from"./FeatureLayerViewBase3D-LMyYQMUa.js";import"./HeatmapDensity.glsl-C3l2E4_r.js";import"./timeSupport-lc-CbMH8.js";import"./utils-B73FYIVx.js";import"./projectExtentUtils-jVz2EOo_.js";import"./geometryServiceUtils-BAfuUWMd.js";import"./dehydratedFeatureComparison-FrVecaYm.js";import"./utils-QU5YnEaN.js";import"./queryForSymbologySnapping-CpP9H6Ot.js";import"./Graphics3DFeatureProcessor-BQEpSiQl.js";import"./hash-CcEbRgUF.js";import"./renderingInfoUtils-CM-x1sKe.js";import"./ExtentSet-htRGim3A.js";import"./optimizedFeatureQueryEngineAdapter-kssGmgQU.js";import"./centroid-DdLmOD72.js";import"./PooledRBush-DOLpbzzR.js";import"./quickselect-QQC62dOK.js";import"./popupUtils-DVsMMUSw.js";import"./Graphics3DObjectStates-3A11B6Ja.js";import"./attributeUtils-Dc8--CBJ.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./QueryEngine-DvJpwVVf.js";import"./normalizeUtils-jF8ENT-M.js";import"./normalizeUtilsCommon-1kdt3mFZ.js";import"./WhereClause-C5cgv7IU.js";import"./TimeOnly-CXMff_RL.js";import"./queryUtils-C-PYzMdy.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-DjYb9CEb.js";import"./utils-wbONfP4A.js";import"./utils-fKSheh_V.js";import"./utils-P5X7Jo62.js";import"./ClassBreaksDefinition-CZekIlFr.js";import"./SnappingCandidate-O5eRSE6e.js";import"./highlightUtils-BvQmi8R1.js";import"./languageUtils-SffSDNrn.js";import"./ImmutableArray-BPVd6ESQ.js";import"./shared-CucDrl0L.js";import"./number-C_FbH9DN.js";import"./FeatureStore-BB8aqLPw.js";import"./BoundsStore-CPp8uyCo.js";import"./LayerView3D-CkNcOz73.js";import"./query-CHobFFH6.js";import"./pbfQueryUtils-CEQJvKKx.js";import"./pbf-TqPCZFva.js";import"./WorkerHandle-DzTh6kPg.js";import"./EventedSet-BPfpQl2f.js";import"./LayerView-GNM55AoL.js";import"./RefreshableLayerView-BcvIu43y.js";let t=class extends n{constructor(){super(...arguments),this.type="feature-3d"}initialize(){var o;const{layer:e,view:r}=this;(o=s(e))!=null&&o.operations.supportsQuery||this.addResolvingPromise(Promise.reject(new i("featurelayerview:query-not-supported","layer view requires a layer with query capability",{layer:e}))),e.infoFor3D!=null&&this.addResolvingPromise(Promise.reject(new i("featurelayerview3d:unsupported-geometry-type",`Unsupported geometry type ${e.geometryType}`))),e.geometryType!=="mesh"||l(e.spatialReference,r.spatialReference)||this.addResolvingPromise(Promise.reject(new i("layerview:spatial-reference-incompatible","The spatial references of the feature layer is incompatible with the spatial reference of the view")))}get featureSpatialReference(){var e,r;return(r=(e=this.view.featureTiles)==null?void 0:e.tilingScheme)==null?void 0:r.spatialReference}};p([m()],t.prototype,"layer",void 0),t=p([a("esri.views.3d.layers.FeatureLayerView3D")],t);const ae=t;export{ae as default};
