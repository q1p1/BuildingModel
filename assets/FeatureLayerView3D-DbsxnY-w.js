import{r as p,m,a,O as s,e as i,J as l}from"./index-Dr8Kof1t.js";import{g as n}from"./FeatureLayerViewBase3D-xvWo_mcg.js";import"./HeatmapDensity.glsl-B7HkXlqP.js";import"./timeSupport-CpSEAtSM.js";import"./utils-DQulXCTB.js";import"./projectExtentUtils-g9b9qDeU.js";import"./geometryServiceUtils-CPrPuNTQ.js";import"./dehydratedFeatureComparison-BneiXjna.js";import"./utils-Q1SSE-Ed.js";import"./queryForSymbologySnapping-Cvlt-rwN.js";import"./Graphics3DFeatureProcessor-CrEzo3BH.js";import"./hash-CcEbRgUF.js";import"./renderingInfoUtils-DMktjgjL.js";import"./ExtentSet-Dx3jyxkv.js";import"./optimizedFeatureQueryEngineAdapter-Dx_hDJdX.js";import"./centroid-DdLmOD72.js";import"./PooledRBush-QBdOmRCG.js";import"./quickselect-QQC62dOK.js";import"./popupUtils-3Rm4Os0H.js";import"./Graphics3DObjectStates-_GKbjqNF.js";import"./attributeUtils-Dc8--CBJ.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./QueryEngine-DVfY-czk.js";import"./normalizeUtils-DGBYx81V.js";import"./normalizeUtilsCommon-B3niOv2l.js";import"./WhereClause-aoPvcXMj.js";import"./TimeOnly-D1c2P3Qv.js";import"./queryUtils-CfS9WM7b.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-DjYb9CEb.js";import"./utils-93zgIiDg.js";import"./utils-BfrIFFIa.js";import"./utils-B4iClXWZ.js";import"./ClassBreaksDefinition-By5kS9e6.js";import"./SnappingCandidate-O5eRSE6e.js";import"./highlightUtils-DiOzhry3.js";import"./languageUtils-Bw27fPDq.js";import"./ImmutableArray-BPVd6ESQ.js";import"./shared-BMvaAK0O.js";import"./number-ymK7fHgj.js";import"./FeatureStore-BFpZtK2l.js";import"./BoundsStore-8rxeiVCs.js";import"./LayerView3D-C0stEa_e.js";import"./query-BZj3QsLr.js";import"./pbfQueryUtils-YKOFkvIW.js";import"./pbf-CNkgkCwk.js";import"./WorkerHandle-CaG2u-kb.js";import"./EventedSet-SjKTJ6Qt.js";import"./LayerView-DQxnzAhF.js";import"./RefreshableLayerView-D3BMZsik.js";let t=class extends n{constructor(){super(...arguments),this.type="feature-3d"}initialize(){var o;const{layer:e,view:r}=this;(o=s(e))!=null&&o.operations.supportsQuery||this.addResolvingPromise(Promise.reject(new i("featurelayerview:query-not-supported","layer view requires a layer with query capability",{layer:e}))),e.infoFor3D!=null&&this.addResolvingPromise(Promise.reject(new i("featurelayerview3d:unsupported-geometry-type",`Unsupported geometry type ${e.geometryType}`))),e.geometryType!=="mesh"||l(e.spatialReference,r.spatialReference)||this.addResolvingPromise(Promise.reject(new i("layerview:spatial-reference-incompatible","The spatial references of the feature layer is incompatible with the spatial reference of the view")))}get featureSpatialReference(){var e,r;return(r=(e=this.view.featureTiles)==null?void 0:e.tilingScheme)==null?void 0:r.spatialReference}};p([m()],t.prototype,"layer",void 0),t=p([a("esri.views.3d.layers.FeatureLayerView3D")],t);const ae=t;export{ae as default};
