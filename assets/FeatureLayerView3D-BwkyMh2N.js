import{r as p,m,a,O as s,e as i,J as l}from"./index-CXNGdYBO.js";import{g as n}from"./FeatureLayerViewBase3D-DlCz7fgM.js";import"./HeatmapDensity.glsl-c0BX1YHM.js";import"./timeSupport-Bo4lAMK4.js";import"./utils-CzM3UKK7.js";import"./projectExtentUtils-BjHLfx4W.js";import"./geometryServiceUtils-C5wjZRhn.js";import"./dehydratedFeatureComparison-BRLkD6TZ.js";import"./utils-CIVJ00mU.js";import"./queryForSymbologySnapping-Yd0qCHVs.js";import"./Graphics3DFeatureProcessor-DmYM8xoH.js";import"./hash-CcEbRgUF.js";import"./renderingInfoUtils-C6db6lo5.js";import"./ExtentSet-DoeSWkTQ.js";import"./optimizedFeatureQueryEngineAdapter-C66RJuFZ.js";import"./centroid-DdLmOD72.js";import"./PooledRBush-bEzBHhXL.js";import"./quickselect-QQC62dOK.js";import"./popupUtils-inVVlP3F.js";import"./Graphics3DObjectStates-DIT22Qgb.js";import"./attributeUtils-Dc8--CBJ.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./QueryEngine-BrENQaUh.js";import"./normalizeUtils-CVXzWEPZ.js";import"./normalizeUtilsCommon-lQzL0CyA.js";import"./WhereClause-T45aJPIL.js";import"./TimeOnly-DheCgCGX.js";import"./queryUtils-DvL-UJ7B.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-DjYb9CEb.js";import"./utils-C4VnO2Hs.js";import"./utils-Buasmwh3.js";import"./utils-C6qYNRbC.js";import"./ClassBreaksDefinition-DKs6Uep3.js";import"./SnappingCandidate-O5eRSE6e.js";import"./highlightUtils-B0WbvOz6.js";import"./languageUtils-gYzxh3To.js";import"./ImmutableArray-BPVd6ESQ.js";import"./shared-B99VZPL4.js";import"./number-BEgXS2hC.js";import"./FeatureStore-_d_oj6P1.js";import"./BoundsStore-CGKTeQ-g.js";import"./LayerView3D-DT6k0xna.js";import"./query-D2_H4P0i.js";import"./pbfQueryUtils-Dq0hj8bq.js";import"./pbf-DLPI8WEw.js";import"./WorkerHandle-C6fE6nVA.js";import"./EventedSet-E1RlfNfJ.js";import"./LayerView-CO8qpCkY.js";import"./RefreshableLayerView-D8putyyV.js";let t=class extends n{constructor(){super(...arguments),this.type="feature-3d"}initialize(){var o;const{layer:e,view:r}=this;(o=s(e))!=null&&o.operations.supportsQuery||this.addResolvingPromise(Promise.reject(new i("featurelayerview:query-not-supported","layer view requires a layer with query capability",{layer:e}))),e.infoFor3D!=null&&this.addResolvingPromise(Promise.reject(new i("featurelayerview3d:unsupported-geometry-type",`Unsupported geometry type ${e.geometryType}`))),e.geometryType!=="mesh"||l(e.spatialReference,r.spatialReference)||this.addResolvingPromise(Promise.reject(new i("layerview:spatial-reference-incompatible","The spatial references of the feature layer is incompatible with the spatial reference of the view")))}get featureSpatialReference(){var e,r;return(r=(e=this.view.featureTiles)==null?void 0:e.tilingScheme)==null?void 0:r.spatialReference}};p([m()],t.prototype,"layer",void 0),t=p([a("esri.views.3d.layers.FeatureLayerView3D")],t);const ae=t;export{ae as default};
