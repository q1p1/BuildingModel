import{H as p,I as m,K as l,P as n,L as d,r as i,m as e,M as h,a as u}from"./index-Dr8Kof1t.js";import{T as c}from"./I3SMeshView3D-rHswtfRh.js";import{l as g}from"./LayerView3D-C0stEa_e.js";import{y}from"./LayerView-DQxnzAhF.js";import"./languageUtils-Bw27fPDq.js";import"./TimeOnly-D1c2P3Qv.js";import"./ImmutableArray-BPVd6ESQ.js";import"./shared-BMvaAK0O.js";import"./number-ymK7fHgj.js";import"./Transform-DRXx2L7z.js";import"./RenderTexture-COKIC7aJ.js";import"./I3SOverrides-nHIYq1sq.js";import"./resourceUtils-C1B2u_Wt.js";import"./I3SNode-Lzsq1nTh.js";import"./I3SUtil-BwSNdwtf.js";import"./I3SBinaryReader-BPOdDymR.js";import"./ReactiveSet-BMYYOrKA.js";import"./meshFeatureSet-DVg6rFsX.js";import"./Mesh-CZNCSf03.js";import"./MeshComponent-_eSTQulB.js";import"./meshProperties-C4iW0Ukm.js";import"./MeshTransform-Cgui07uu.js";import"./MeshVertexAttributes-BygnKOvk.js";import"./triangulationUtils-DQFjLGz4.js";import"./earcut-Lltz9D9k.js";import"./deduplicate-Det1wRvh.js";import"./vertexSpaceConversion-wyQTBCDa.js";import"./vec4-CsNWi233.js";import"./External-DHXF5LWN.js";import"./infoFor3D-CxdEiWhp.js";import"./meshFeatureAttributes-DumNhRGL.js";import"./SceneModification-jAGBd2Q3.js";import"./persistable-t1zQuLXE.js";import"./resourceExtension-CIhy_axB.js";import"./ExtentSet-Dx3jyxkv.js";import"./optimizedFeatureQueryEngineAdapter-Dx_hDJdX.js";import"./centroid-DdLmOD72.js";import"./PooledRBush-QBdOmRCG.js";import"./quickselect-QQC62dOK.js";import"./popupUtils-3Rm4Os0H.js";import"./WorkerHandle-CaG2u-kb.js";import"./SceneLayerWorker-CejuOL2k.js";import"./attributeUtils-Dc8--CBJ.js";import"./highlightUtils-DiOzhry3.js";import"./makeScheduleFunction-CggzEh3c.js";const f=.2;let t=class extends c(g(y)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this._applySSAO=!p("disable-feature:im-ssao"),this._shadeNormals=!!p("enable-feature:im-shading"),this.drapeTargetType=m.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var r;return((r=this._controller)==null?void 0:r.updatingProgress)??0}get lodFactor(){var r,o,a,s;return((s=(a=(o=(r=this.view)==null?void 0:r.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?f:1}get visibleAtCurrentScale(){return l(this.i3slayer.effectiveScaleRange,this.view.scale)}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),n),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){return new d({layer:this.layer,sourceLayer:this.layer})}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const r=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>r,()=>this._modifications=r.toArray(),n),"modifications")}};i([e()],t.prototype,"layer",void 0),i([e()],t.prototype,"i3slayer",null),i([e(h)],t.prototype,"updatingProgress",void 0),i([e()],t.prototype,"updatingProgressValue",null),i([e()],t.prototype,"lodFactor",null),i([e({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),i([e({readOnly:!0})],t.prototype,"visibleAtCurrentScale",null),t=i([u("esri.views.3d.layers.IntegratedMeshLayerView3D")],t);const mt=t;export{mt as default};
