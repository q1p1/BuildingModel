import{dr as b,dz as E,cK as B,dt as F,cN as N,bH as p,cO as De,dy as j,jS as Ee,xm as Fe,dx as x,cM as Ge,hi as Ue,ro as We,j3 as qe,o6 as Re,ix as ke,i8 as ae,J as He,iD as X,cz as oe,dW as je,o9 as te,xn as se,hH as Be,xo as le,dQ as Ne,db as he,ts as Je,d8 as Ze,oz as Ke,tZ as de,c7 as ce,iC as Qe,iw as ue,e6 as Xe,i7 as q,n0 as Ye,r as l,m as d,a as Q,b as ne,E as I,F as pe,b5 as et,ch as ge,hg as tt,N as ie,m$ as st,z as it,as as rt,wm as nt,wq as at,wp as ot,ws as lt,wn as ht,ba as J,wt as me,x5 as dt,xp as _e,ww as ct,wy as ut,wz as pt,_ as gt,wA as fe,wB as mt,xq as _t,wF as ft,wG as yt,wH as vt,wI as wt,wN as O,wO as Lt,mv as St,wP as $t,wx as Mt,kT as Y,wR as ee,mz as ye,wU as Ct,xr as Pt,wX as bt,p2 as Te,bm as Z,dF as D,sM as Vt,dI as ve,dJ as we,ms as xt,d2 as At,d4 as Le,qk as Dt,q9 as Se,q8 as $e,vg as Gt,ph as Me,bT as Rt,rS as Tt,P as It,u as P,gC as Ce,dZ as Ot,rT as zt,xs as Et,xt as Ft,xu as Ut,xv as Wt,xw as qt}from"./index-CO3Xhgsf.js";import{e as re,a as kt}from"./interfaces-C1EVplpJ.js";import{s as Ht}from"./AnalysisView3D-Cb2Ux6ER.js";import{o as jt,U as Pe}from"./euclideanAreaMeasurementUtils-prUChI75.js";import{l as Bt,h as Nt,g as Ie}from"./TextOverlayItem-CCIULHUM.js";import{e as Jt,u as Zt,f as Kt}from"./geodesicLengthMeasurementUtils-v5qyVx-m.js";import{a as Qt,b as Xt,d as z}from"./LineVisualElement-CAVxxs2e.js";import{E as be,p as Yt,P as es,a as ts}from"./EditGeometryOperations-BfDUfWrC.js";import{a as Ve,_ as ss,f as is}from"./Segment-CEfYsrgS.js";import{f as rs}from"./DefaultLayouts-DbuAGaIe.js";import{e as ns}from"./TriangleMaterial-DRLHcGLs.js";import{h as as}from"./lineStippleUtils-C89mzWlO.js";import"./geometryEngine-CiQy_th0.js";import"./geometryEngineBase-yFIvKOkM.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./hydrated-DyMAxGe_.js";import"./viewUtils-CcPgoAOe.js";import"./earcut-Lltz9D9k.js";import"./line-BoUQGD2S.js";import"./geometry2dUtils-EVtqnYwM.js";function xe(t,e,s,i,r){b(k,t),E(H,t,e),B(k,s,k,r),B(H,s,H,r),F(i,H,k),N(i,i)}const k=p(),H=p();function os(t,e){const s=Ue(e);De(s,0,0,0);for(let r=0;r<t.length;++r)E(s,s,t[r]);j(s,s,1/t.length);let i=0;for(let r=0;r<t.length;++r)i=Math.max(i,Ee(s,t[r]));e[3]=Math.sqrt(i)}function ls(t,e){if(t.length<3)throw new Error("need at least 3 points to fit a plane");Fe(t[0],t[1],t[2],e)}function hs(t,e){return x(t,e)+t[3]}function ds(t,e,s,i){const r=us;return b(r.rings[0][0],t),b(r.rings[0][1],e),b(r.rings[0][2],s),b(r.rings[0][3],t),r.spatialReference=i,jt(r)}function cs(t,e=null,s=!0){const r=(n,a)=>{if(a[0]===0&&a[1]===0&&a[2]===0)return!1;for(let o=0;o<n.length;++o)if(x(a,n[o])<-1e-6)return!1;return!0};if(t.length===0)return!1;if(t.length===1)return e&&b(e,t[0]),!0;De($,0,0,0);for(let n=0;n<t.length;++n)E($,$,t[n]);if(N($,$),r(t,$))return e&&b(e,$),!0;if(!s)return!1;for(let n=0;n<t.length;++n)for(let a=0;a<t.length;++a)if(n!==a&&(Ge($,t[n],t[a]),N($,$),r(t,$)))return e&&b(e,$),!0;return!1}const us={hasM:!1,hasZ:!0,rings:[[p(),p(),p(),p()]],spatialReference:null,type:"polygon"},$=p();class ps{get numVertices(){return this._length}get hasStagedVertex(){return this._hasCursorPoint}constructor(e){this.validMeasurement=!1,this.positionsWorld=[],this.positionsRender=[],this.positionsFittedWorld=[],this.positionsFittedRender=[],this.positionsGeodesic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.areaCentroidWorldCoords=p(),this.areaCentroidRenderCoords=p(),this.geodesicAreaCentroidRenderCoords=p(),this.fittingMode=null,this.area=null,this.geodesicArea=null,this.pathLength=null,this.geodesicPathLength=null,this.perimeterLength=null,this._length=0,this._centroidRenderCoords=p(),this._planeWorldCoords=We(),this._worldUp=p(),this._worldTangent=p(),this._frame=[p(),p(),p()],this._pathVersion=-1,this._hasCursorPoint=!1,this._mode=null,this._tempU=p(),this._tempV=p(),this._tempVec3=p(),this._tempSphere=qe(),this._sceneView=e;const s=Bt(e.spatialReference);this._measurementSR=s,this._lengthMeasurementUnit=Re(s)??"meters",this._areaMeasurementUnit=ke(s)??"square-meters"}update(e,s,i,r,n,a){const o=s!=null,h=this._pathVersion===e.version,c=this._hasCursorPoint===o,u=this._mode===n;return!(h&&!a&&c&&u&&e.isValidPolygon)&&(this._pathVersion=e.version,this._hasCursorPoint=o,this._updateCursorSegmentLength(e,s),this._update(e,s,i,r,n),!0)}_update(e,s,i,r,n){const a=this._sceneView.renderSpatialReference,o=this._measurementSR,h=i.spatialReference;let c=e.numVertices;const u=!(s==null||s.equals(e.lastPoint)||c>2&&s.equals(e.firstPoint));u&&(c+=1);const g=!e.polygonIsClosed&&c>2,v=e.polygonIsClosed||g;this._resize(c);const f=ae(h),_=h!=null&&Jt(h)?h:null,C=_!=null&&He(h,f),{positionsGeodesic:w,positionsWorld:U,positionsRender:W,positionsSpherical:S}=this,A=(L,V)=>{gs(i.elevationProvider,L),q(L,U[V],o),q(L,W[V],a),C&&(q(L,w[V],_),q(L,S[V],f),N(S[V],S[V]))};e.forEachVertexPosition((L,V)=>A(L,V)),u&&A(s,c-1);const G=this._updatePathLengths(v);if(this.pathLength=this._length>1?X(G,this._lengthMeasurementUnit):null,C){const L=this._updateGeodesicPathLengths(v,_);this.geodesicPathLength=L!=null&&this._length>1?L:null}else this.geodesicPathLength=null;if(this._updateMode(n),!v)return this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),this.geodesicIntersectingSegments.clear(),void(this.validMeasurement=!1);this._updateAreaAndPerimeterLength(i,a,o,r),C&&this._updateGeodesicArea(i,_),this.validMeasurement=!0}getData(){return{validMeasurement:this.validMeasurement,numVertices:this.numVertices,hasStagedVertex:this.hasStagedVertex,positionsRender:this.positionsRender,positionsFittedWorld:this.positionsFittedWorld,positionsFittedRender:this.positionsFittedRender,intersectingSegments:this.intersectingSegments,geodesicIntersectingSegments:this.geodesicIntersectingSegments,triangleIndices:this.triangleIndices,geodesicTriangleIndices:this.geodesicTriangleIndices,areaCentroidRenderCoords:this.areaCentroidRenderCoords,geodesicAreaCentroidRenderCoords:this.geodesicAreaCentroidRenderCoords,area:this.area,geodesicArea:this.geodesicArea,pathLength:this.pathLength,geodesicPathLength:this.geodesicPathLength,perimeterLength:this.perimeterLength,actualMeasurementMode:this.actualMeasurementMode}}_resize(e){for(e<this._length&&(this.positionsWorld.length=e,this.positionsRender.length=e,this.positionsFittedWorld.length=e,this.positionsFittedRender.length=e,this.positionsGeodesic.length=e,this.positionsSpherical.length=e,this.positionsStereographic.length=e,this.pathSegmentLengths.length=e,this.geodesicPathSegmentLengths.length=e,this.perimeterSegmentLengths.length=e,this._length=e);this._length<e;)this.positionsWorld.push(p()),this.positionsRender.push(p()),this.positionsFittedWorld.push(oe()),this.positionsFittedRender.push(p()),this.positionsGeodesic.push(p()),this.positionsSpherical.push(p()),this.positionsStereographic.push(oe()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length}_updatePathLengths(e){const s=this.positionsWorld,i=this.pathSegmentLengths;let r=0;const n=this._length;for(let a=0;a<n;++a){const o=i[a]=je(s[a],s[(a+1)%n]);(a<n-1||e)&&(r+=o)}return r}_updateGeodesicPathLengths(e,s){const i=this.positionsGeodesic,r=this.geodesicPathSegmentLengths;let n=0;const a=this._length;for(let o=0;o<a;++o){const h=Zt(i[o],i[(o+1)%a],s);if(h==null)return null;const c=te(h,"meters").value,u=r[o]=c;(o<a-1||e)&&(n+=u)}return X(n,"meters")}_updateAreaAndPerimeterLength(e,s,i,r){const n=e.renderCoordsHelper,a=this.positionsWorld,o=this.positionsRender,h=this.positionsFittedWorld,c=this.positionsFittedRender,u=this._planeWorldCoords,g=this._centroidRenderCoords;se(o,g),n.worldUpAtPosition(g,this._worldUp),n.worldBasisAtPosition(g,Be.X,this._worldTangent),xe(g,this._worldUp,s,this._worldUp,i),xe(g,this._worldTangent,s,this._worldTangent,i),a.length>2&&ls(a,u),this.fittingMode=this._selectFittingMode(u,a,this._worldUp,r);let v=0;if(this.fittingMode==="horizontal"){let S=-1/0;o.forEach((A,G)=>{const L=n.getAltitude(o[G]);L>S&&(S=L,v=G)})}const f=a[v];let _=u,C=this._worldTangent;this.fittingMode==="horizontal"?_=this._worldUp:this.fittingMode==="vertical"&&(_=this._tempVec3,C=this._worldUp,le(u,this._worldUp,_)),b(this._frame[2],_),le(C,_,this._frame[0]),Ge(this._frame[1],this._frame[0],this._frame[2]),Ne(this._frame[1],this._frame[1]);const w=this._tempVec3,U=this._tempU,W=this._tempV;for(let S=0;S<this._length;++S){const A=h[S],G=c[S];F(w,a[S],f),he(A,x(this._frame[0],w),x(this._frame[1],w)),j(U,this._frame[0],A[0]),j(W,this._frame[1],A[1]),E(w,U,W),E(w,w,f),B(w,i,G,s)}this.perimeterLength=this._length>0?this._updatePerimeterLengths():null,se(c,this.areaCentroidRenderCoords),B(this.areaCentroidRenderCoords,s,this.areaCentroidWorldCoords,i),this._updateIntersectingSegments(),this.area=this.intersectingSegments.size===0?this._computeArea():null}_updateGeodesicArea(e,s){const{renderCoordsHelper:i,spatialReference:r}=e,{positionsSpherical:n,positionsStereographic:a}=this,o=this._tempVec3,h=cs(n,o);if(!h)return void(this.geodesicArea=null);const c=this._tempU,u=this._tempV;Je(o,c,u);for(let g=0;g<this._length;++g){const v=x(n[g],c),f=x(n[g],u),_=x(n[g],o);he(a[g],v/_,f/_)}j(o,o,Ze(r).radius),i.toRenderCoords(o,ae(r),this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=h&&this.geodesicIntersectingSegments.size===0?this._computeGeodesicArea(s):null}_updatePerimeterLengths(){const e=this.positionsFittedWorld,s=this.perimeterSegmentLengths;let i=0;for(let r=0;r<this._length;++r)i+=s[r]=Ke(e[r],e[(r+1)%this._length]);return X(i,this._lengthMeasurementUnit)}_updateIntersectingSegments(){const e=this.positionsFittedWorld,s=this.intersectingSegments;s.clear();for(let i=0;i<this._length;++i)for(let r=i+2;r<this._length;++r){if((r+1)%this._length===i)continue;const n=e[i],a=e[(i+1)%this._length],o=e[r],h=e[(r+1)%this._length];de(n,a,o,h)&&(s.add(i),s.add(r))}}_computeArea(){const e=this.positionsFittedWorld,s=this.triangleIndices=ce(Pe(e));let i=0;for(let r=0;r<s.length;r+=3)i+=Qe(e[s[r]],e[s[r+1]],e[s[r+2]]);return ue(i,this._areaMeasurementUnit)}_updateGeodesicIntersectingSegments(){const e=this.positionsStereographic,s=this.geodesicIntersectingSegments;s.clear();for(let i=0;i<this._length;++i)for(let r=i+2;r<this._length;++r){if((r+1)%this._length===i)continue;const n=e[i],a=e[(i+1)%this._length],o=e[r],h=e[(r+1)%this._length];de(n,a,o,h)&&(s.add(i),s.add(r))}}_computeGeodesicArea(e){const s=this.positionsGeodesic,i=this.positionsStereographic,r=this.geodesicTriangleIndices=ce(Pe(i));let n=0;for(let a=0;a<r.length;a+=3){const o=ds(s[r[a]],s[r[a+1]],s[r[a+2]],e);if(o==null)return null;n+=te(o,"square-meters").value}return ue(n,"square-meters")}_selectFittingMode(e,s,i,r){const n=s.map(u=>Math.abs(hs(e,u))).reduce((u,g)=>Math.max(u,g),0);os(s,this._tempSphere);const a=n/(2*this._tempSphere[3]),o=a<r.maxRelativeErrorCoplanar,h=a<r.maxRelativeErrorAlmostCoplanar;let c="horizontal";return o?c="oblique":h&&(c=Math.abs(x(i,e))>Math.cos(Xe(r.verticalAngleThreshold))?"horizontal":"vertical"),c}_updateCursorSegmentLength(e,s){var r;const i=e.lastPoint;e.isValidPolygon||i==null||s==null?(this.geodesicStagedSegmentLength=null,this.stagedSegmentLength=null):(this.geodesicStagedSegmentLength=Kt(i,s),this.stagedSegmentLength=(r=Nt(i,s))==null?void 0:r.direct)}_updateMode(e){if(e===re.Auto){this.actualMeasurementMode="euclidean";let s=0;this.geodesicPathLength!=null&&(s+=this.geodesicPathLength.value),s>ms&&(this.actualMeasurementMode="geodesic")}else this.actualMeasurementMode=e===re.Euclidean?"euclidean":"geodesic";this.geodesicPathLength==null&&(this.actualMeasurementMode="euclidean"),this._mode=e}}function gs(t,e){e.hasZ||(e.z=Ye(t,e,"ground")??0)}const ms=1e5;let R=class extends ne{constructor(t){super(t)}initialize(){this._measurementDataManager=new ps(this.view),this.addHandles([this.analysisViewData.path.on("change",()=>this._update()),I(()=>this.analysisViewData.stagedPoint,()=>this._update(),pe),I(()=>this.analysisViewData.mode,()=>this._update(),pe)]),this._update()}_update(t=!1){const{analysisViewData:e,view:s}=this,i={maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80};this._measurementDataManager.update(e.path,e.stagedPoint,s,i,e.mode,t)&&(e.measurementData=this._measurementDataManager.getData())}};l([d({constructOnly:!0})],R.prototype,"view",void 0),l([d({constructOnly:!0})],R.prototype,"analysis",void 0),l([d({constructOnly:!0})],R.prototype,"analysisViewData",void 0),R=l([Q("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementController")],R);let M=class extends et.EventedAccessor{constructor(e={}){super(e),this._version=0,this._internalGeometryChange=!1,this._extent=ge()}set areaMeasurement(e){this._set("areaMeasurement",e),e!=null&&this.view!=null&&this._initialize(e,this.view)}set view(e){this._set("view",e),e!=null&&this.areaMeasurement!=null&&this._initialize(this.areaMeasurement,e)}get constructed(){return this.areaMeasurement!=null&&this.view!=null}get version(){return this._version}get isEmptyPolygon(){return!this.constructed||this._editGeometry.components.length===0}get isValidPolygon(){return this.constructed&&this.polygonIsClosed}get extent(){if(this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].vertices.length>0){const e=ge(this._extent);return this.forEachVertex(s=>{tt(e,s.pos)}),e}return null}get spatialReference(){return this.constructed?this._editGeometry.coordinateHelper.spatialReference:null}_initialize(e,s){this.removeAllHandles(),this.addHandles(I(()=>e.geometry,()=>{this._updateEditGeometryFromModelGeometry(e,s)},ie)),this._makeDirty(!0)}_makeDirty(e=!1){this.notifyChange("polygonIsClosed"),this.notifyChange("isValidPolygon"),this.notifyChange("initialized"),this.notifyChange("extent"),e&&this.notifyChange("numVertices")}_updateEditGeometryFromModelGeometry(e,s){if(this._version++,this._internalGeometryChange)return;this.removeHandles("EditGeometry");let i=e.geometry;if(i!=null){const r=st(i,s.spatialReference);r==null&&Qt(e,i.spatialReference,it.getLogger(this)),i=r}this._editGeometryOperations=i!=null?be.fromGeometry(i,s.state.viewingMode):new be(new Yt("polygon",es(!0,!1,s.spatialReference)),s.state.viewingMode),this._makeDirty(!0),this.emit("change"),this.addHandles(this._editGeometry.on("change",r=>{this._makeDirty(r.addedVertices!=null||r.removedVertices!=null),this._internalGeometryChange=!0,e.geometry=this.numVertices>0?this._editGeometry.geometry:null,this._internalGeometryChange=!1}),"EditGeometry")}get _editGeometry(){return this._editGeometryOperations.data}get vertices(){const e=[];return this.forEachVertex(s=>{e.push(s)}),e}get numVertices(){return this.constructed&&this._editGeometry.components.length>0?this._editGeometry.components[0].vertices.length:0}get polygonIsClosed(){return this._editGeometry.components.length>0&&this._editGeometry.components[0].isClosed()}get firstPoint(){if(this.constructed&&this._editGeometry.components.length>0){const e=this._editGeometry.components[0].getFirstVertex();if(e!=null)return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}return null}get lastPoint(){if(this.constructed&&this._editGeometry.components.length>0){const e=this._editGeometry.components[0].getLastVertex();if(e!=null)return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}return null}getVertex(e){if(!this.constructed||this._editGeometry.components.length===0||this._editGeometry.components[0].vertices.length===0)return null;const s=this._editGeometry.components[0].vertices[0];let i=s;do{if(i.index===e)return i;i=i.rightEdge.rightVertex}while(i!==s&&i!=null);return null}getVertexPositionAsPoint(e){return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}getVertexPositionAsPointFromIndex(e){return this._editGeometry.coordinateHelper.vectorToPoint(this.getVertex(e).pos)}forEachVertex(e){this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].iterateVertices(e)}forEachVertexPosition(e){const s=this._editGeometry.coordinateHelper;this.forEachVertex((i,r)=>{s.vectorToPoint(i.pos,Ae),e(Ae,r)})}clear(){this.areaMeasurement!=null&&(this.areaMeasurement.geometry=null)}add(e){if(!this.constructed)return null;if(this._editGeometry.components.length===0){const i=this.view;this._editGeometry.components.push(new ts(i.spatialReference,i.state.viewingMode))}const s=this._editGeometryOperations.appendVertex(this._editGeometry.coordinateHelper.pointToVector(e));return this.emit("change"),s}close(){if(!this.constructed||this._editGeometry.components.length===0)return null;const e=this._editGeometryOperations.closeComponent(this._editGeometry.components[0]);return this.emit("change"),e}ensureContains(e,s=""){let i=!1;if(this._editGeometry.components.forEach(r=>{r.iterateVertices(n=>{n===e&&(i=!0)})}),!i)throw new Error(`vertex doesnt exist ${s}`);return i}setVertexPosition(e,s){if(!this.constructed)return null;const i=this._editGeometryOperations.setVertexPosition(e,this._editGeometry.coordinateHelper.pointToVector(s));return this.emit("change"),i}equals(e){if(this.numVertices!==e.numVertices)return!1;let s=!0;return this.forEachVertexPosition((i,r)=>{const n=e.getVertexPositionAsPointFromIndex(r);i.equals(n)||(s=!1)}),!!s}};l([d({value:null})],M.prototype,"areaMeasurement",null),l([d({value:null})],M.prototype,"view",null),l([d()],M.prototype,"isEmptyPolygon",null),l([d()],M.prototype,"isValidPolygon",null),l([d()],M.prototype,"extent",null),l([d()],M.prototype,"spatialReference",null),l([d()],M.prototype,"numVertices",null),l([d()],M.prototype,"polygonIsClosed",null),M=l([Q("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementPathHelper")],M);const Ae=new rt;function Oe(t){const e=new nt,{vertex:s,fragment:i,varyings:r}=e;return e.include(at,t),e.include(ot,t),e.include(lt,t),ht(s,t),e.attributes.add(J.POSITION,"vec3"),e.attributes.add(J.UV0,"vec2"),r.add("vUV","vec2"),r.add("vpos","vec3"),t.terrainDepthTest&&e.varyings.add("depth","float"),s.main.add(me`
      vUV = uv0;
      vpos = position;
      ${t.terrainDepthTest?"depth = (view * vec4(position, 1.0)).z;":""}
      gl_Position = proj * view * vec4(position, 1.0);`),i.uniforms.add(new dt("size",n=>n.size)),i.uniforms.add(new _e("color1",n=>n.color1)),i.uniforms.add(new _e("color2",n=>n.color2)),i.include(ct),i.main.add(me`
      ${t.terrainDepthTest?"terrainDepthTest(depth);":""}
      vec2 uvScaled = vUV / (2.0 * size);

      vec2 uv = fract(uvScaled - 0.25);
      vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
      float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
      float t = mix(abs(ab.x + ab.y), 0.5, fade);

      fragColor = mix(color2, color1, t);
      outputColorHighlightOID(fragColor, vpos);`),e}const _s=Object.freeze(Object.defineProperty({__proto__:null,build:Oe},Symbol.toStringTag,{value:"Module"}));class fs extends ut{constructor(e,s,i){super(e,s,new pt(_s,()=>gt(()=>Promise.resolve().then(()=>As),void 0)),i)}initializePipeline(e){const{oitPass:s,transparent:i,polygonOffset:r,output:n}=e,a=s===fe.NONE,o=s===fe.FrontFace;return mt({blending:i?_t(s):null,depthTest:{func:ft(s)},depthWrite:yt(e),drawBuffers:vt(s,n),colorWrite:wt,polygonOffset:a||o?r?ys:null:{factor:-1,units:-25}})}}const ys={factor:0,units:-25};class T extends Lt{constructor(){super(...arguments),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.terrainDepthTest=!1,this.cullAboveTerrain=!1,this.textureCoordinateType=St.None,this.emissionSource=$t.None,this.output=Mt.Color,this.hasSlicePlane=!1,this.occlusionPass=!1,this.objectAndLayerIdColorInstanced=!1}get discardInvisibleFragments(){return this.transparent&&this.writeDepth}}l([O()],T.prototype,"transparent",void 0),l([O()],T.prototype,"writeDepth",void 0),l([O()],T.prototype,"polygonOffset",void 0),l([O()],T.prototype,"terrainDepthTest",void 0),l([O()],T.prototype,"cullAboveTerrain",void 0);class vs extends ns{constructor(e){super(e,Ls),this._configuration=new T,this.produces=new Map([[Y.OPAQUE_MATERIAL,s=>ee(s)&&!this.transparent],[Y.TRANSPARENT_MATERIAL,s=>ee(s)&&this.transparent&&this.parameters.writeDepth],[Y.TRANSPARENT_MATERIAL_WITHOUT_DEPTH,s=>ee(s)&&this.transparent&&!this.parameters.writeDepth]])}getConfiguration(e,s){return this._configuration.transparent=this.transparent,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.polygonOffset=this.parameters.polygonOffset,this._configuration.oitPass=s.oitPass,this._configuration.terrainDepthTest=s.terrainDepthTest,this._configuration.cullAboveTerrain=s.cullAboveTerrain,this._configuration}get visible(){return this.parameters.color1[3]>=ye||this.parameters.color2[3]>=ye}get transparent(){return this.parameters.color1[3]<1||this.parameters.color2[3]<1}createGLMaterial(e){return new ws(e)}createBufferWriter(){return new Ct(rs)}}class ws extends Pt{beginSlot(e){return this.acquireTechnique(fs,e)}}let Ls=class extends bt{constructor(){super(...arguments),this.size=Te(1,1),this.color1=Z(.75,.75,.75,1),this.color2=Z(.5,.5,.5,1),this.writeDepth=!0,this.polygonOffset=!1}};class Ss extends Xt{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=D.OccludeAndTransparent,this._geometry=null,this._size=Te(1,1),this._color1=Z(1,.5,0,.5),this._color2=Z(1,1,1,.5),this.applyProperties(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.recreateGeometry()}get size(){return this._size}set size(e){Vt(this._size,e),this._updateMaterial()}get color1(){return this._color1}set color1(e){ve(e,this._color1)||(we(this._color1,e),this._updateMaterial())}get color2(){return this._color2}set color2(e){ve(e,this._color2)||(we(this._color2,e),this._updateMaterial())}_updateMaterial(){this._checkerBoardMaterial!=null&&this._checkerBoardMaterial.setParameters({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new vs({size:this._size,color1:this._color1,color2:this._color2,writeDepth:!1,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent,isDecoration:this.isDecoration})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachExternalMaterial(e){this._checkerBoardMaterial!=null&&e(this._checkerBoardMaterial)}createGeometries(e){if(this._geometry==null||this._checkerBoardMaterial==null)return;const s=$s;xt(s,this.transform);const i=this._geometry,r=[],n=p();i.position.forEach(h=>{F(n,h,s),r.push(n[0],n[1],n[2])});const a=[];i.uv.forEach(h=>{a.push(h[0],h[1])});const o=new At(this._checkerBoardMaterial,[[J.POSITION,new Le(r,i.triangleIndices,3,!0)],[J.UV0,new Le(a,i.triangleIndices,2,!0)]]);e.addGeometry(o)}}const $s=p();let y=class extends ne{get _parameters(){const{accentColor:t,textColor:e}=this.view.effectiveTheme,s=Dt(t),i=Se(t,.5),r=Se($e(t),.5),n=$e(e,Gt.Low);return{accentColor:s,transparentAccentColor:i,transparentContrastColor:r,intersectingLineColor:[1,.2,0,1],textColor:e,textBackgroundColor:Me(n,.6),textCalloutColor:Me(n,.5),pathLineWidth:3,perimeterLineWidth:2,projectionLineWidth:2,projectionLineStippleSize:5,labelDistance:25}}get visible(){return this.analysisViewData.visible}get _renderUnits(){const t=this.view.renderCoordsHelper.spatialReference;return Re(t)??"meters"}get testData(){}constructor(t){super(t),this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._measurementArea=null,this._areaLabel=null,this._perimeterLengthLabel=null,this._pathSegments=[],this._perimeterSegments=[],this._origin=p(),this._originTransform=Rt(),this.messages=null,this.viewData=xs,this.areaLabel=null,this.perimeterLengthLabel=null,this.loadingMessages=!0}initialize(){const{analysisViewData:t,_parameters:e,view:s}=this;this._path=new z({view:s,attached:!0,width:e.pathLineWidth,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent,isDecoration:!0}),this._intersectedPath=new z({view:s,attached:!0,width:e.pathLineWidth,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent,isDecoration:!0}),this._perimeter=new z({view:s,attached:!0,width:e.perimeterLineWidth,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent,isDecoration:!0}),this._intersectedPerimeter=new z({view:s,attached:!0,width:e.perimeterLineWidth,color:e.intersectingLineColor,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent,isDecoration:!0}),this._projectionLines=new z({view:s,attached:!0,width:e.projectionLineWidth,stipplePattern:as(e.projectionLineStippleSize),polygonOffset:!0,renderOccluded:D.OccludeAndTransparent,isDecoration:!0}),this._measurementArea=new Ss({view:s,attached:!0,isDecoration:!0});const i={attached:!0,view:s,isDecoration:!0};this._areaLabel=new Ve({...i,fontSize:K.Large}),this._perimeterLengthLabel=new Ve({...i,fontSize:K.Small}),this.addHandles([I(()=>[t.mode,this.visible,t.unit,t.measurementData,t.stagedPoint],()=>this._update(),ie),I(()=>{var r;return(r=s.state)==null?void 0:r.camera},()=>this._updateLabels(),ie),Tt(()=>this._updateMessageBundle()),I(()=>this._parameters,({accentColor:r,transparentAccentColor:n,transparentContrastColor:a,textColor:o,textBackgroundColor:h,textCalloutColor:c})=>{const{_path:u,_intersectedPath:g,_perimeter:v,_projectionLines:f,_measurementArea:_,_areaLabel:C,_perimeterLengthLabel:w}=this;u.color=r,g.color=r,v.color=r,f.color=r,_.color1=n,_.color2=a,C.textColor=o,C.backgroundColor=h,C.calloutColor=c,w.textColor=o,w.backgroundColor=h,w.calloutColor=c},It)]),this._updateMessageBundle()}destroy(){this._measurementArea=P(this._measurementArea),this._path=P(this._path),this._intersectedPath=P(this._intersectedPath),this._perimeter=P(this._perimeter),this._intersectedPerimeter=P(this._intersectedPerimeter),this._areaLabel=P(this._areaLabel),this._perimeterLengthLabel=P(this._perimeterLengthLabel),this._projectionLines=P(this._projectionLines),this.set("view",null)}_update(){if(this.destroyed||!this.view.ready||!this.view.renderCoordsHelper)return;const{analysisViewData:{measurementData:t},analysisViewData:e}=this;t!=null&&(this._updateViewData(t,e.path),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}_updateViewData(t,e){const s=t.validMeasurement,i=t.actualMeasurementMode==="geodesic",r=i?t.geodesicArea:t.area;let n=1;if(r){const o=Cs(r,this.analysisViewData.unit);n=qt(Math.sqrt(o.value)/Math.sqrt(300)),n*=Math.sqrt(Ce(1,o.unit,"square-meters")),n=Ce(n,"meters",this._renderUnits)}const a={validMeasurement:s,numVertices:t.numVertices,hasStagedVertex:t.hasStagedVertex,path:e,mode:t.actualMeasurementMode,positionsRender:t.positionsRender,positionsFittedWorld:t.positionsFittedWorld,positionsFittedRender:t.positionsFittedRender,intersectingSegments:i?t.geodesicIntersectingSegments:t.intersectingSegments,triangleIndices:i?t.geodesicTriangleIndices:t.triangleIndices,areaCentroid:i?t.geodesicAreaCentroidRenderCoords:t.areaCentroidRenderCoords,perimeterLengthLabelSegmentIndex:0,area:i?t.geodesicArea:t.area,pathLength:i?t.geodesicPathLength:t.pathLength,perimeterLength:t.perimeterLength,checkerSize:n};this._set("viewData",a)}_updateOrigin(){const t=this.viewData;se(t.positionsRender,this._origin),Ot(this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_createSegments(t){const e=this.viewData,s=this.view.renderCoordsHelper.spatialReference,i=e.mode,r=[],n=[],a=[],o=e.numVertices,h=e.validMeasurement?o:o-1;for(let u=0;u<h;++u){const g=e[t][u],v=e[t][(u+1)%o];let f=null;switch(i){case"euclidean":f=new is(g,v);break;case"geodesic":f=new ss(g,v,s)}e.intersectingSegments.has(u)?a.push(f):n.push(f),r.push(f)}let c=null;return e.validMeasurement&&e.hasStagedVertex&&h>=2?c=r[r.length-2]:e.hasStagedVertex&&h>=1&&(c=r[r.length-1]),{all:r,nonIntersecting:n,intersecting:a,stagedSegment:c}}_updatePathSegments(){const{visible:t}=this,e=this._createSegments("positionsRender");this._path.setGeometryFromSegments(e.nonIntersecting,this._origin),this._path.visible=t,this._intersectedPath.setGeometryFromSegments(e.intersecting,this._origin),this._intersectedPath.visible=t,this._pathSegments=e.all}_updatePerimeterSegments(){const t=this.visible&&this.viewData.mode==="euclidean",e=this._createSegments("positionsFittedRender");this._perimeter.setGeometryFromSegments(e.nonIntersecting,this._origin),this._perimeter.visible=t,this._intersectedPerimeter.setGeometryFromSegments(e.intersecting,this._origin),this._intersectedPerimeter.visible=t,this._perimeterSegments=e.all}_updateArea(){const t=this.viewData;switch(t.mode){case"euclidean":this._updateAreaEuclidean(t);break;case"geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(t){const e=this.visible;t.validMeasurement&&t.intersectingSegments.size===0&&t.triangleIndices?(this._measurementArea.geometry={uv:t.positionsFittedWorld,position:t.positionsFittedRender,triangleIndices:t.triangleIndices},this._measurementArea.size=[t.checkerSize,t.checkerSize],this._measurementArea.visible=e):this._measurementArea.visible=!1}_updateAreaGeodesic(){this._measurementArea.visible=!1}_updateProjectionLines(){const t=this.viewData,e=this.visible,s=t.mode,i=t.numVertices;if(i>0&&t.validMeasurement&&s==="euclidean"){const r=[];for(let n=0;n<i;++n){const a=p();F(a,t.positionsRender[n],this._origin);const o=p();F(o,t.positionsFittedRender[n],this._origin),r.push([a,o])}this._projectionLines.geometry=r,this._projectionLines.visible=e}else this._projectionLines.geometry=null,this._projectionLines.visible=!1}_updateLabels(){if(this.destroyed)return;const{viewData:t}=this,{area:e,path:s}=t;if(!s)return;const i=this.visible,r=Ms(this.messages,e,this.analysisViewData.unit);if(r!=null?(this._areaLabel.geometry={type:"point",point:t.areaCentroid},this._areaLabel.text=r,this._areaLabel.visible=t.validMeasurement&&t.intersectingSegments.size===0&&i):this._areaLabel.visible=!1,this._set("areaLabel",r),t.validMeasurement&&t.intersectingSegments.size===0){const n=t.mode==="geodesic"||!t.validMeasurement,a=n?t.pathLength:t.perimeterLength,o=Ps(this.messages,a,this.analysisViewData.unit);this._set("perimeterLengthLabel",o),this._perimeterLengthLabel.distance=this._parameters.labelDistance,this._perimeterLengthLabel.anchor="top",this._perimeterLengthLabel.text=o,this._perimeterLengthLabel.visible=!0;let h=!0;for(let c=0;c<t.numVertices;++c){const u=(t.perimeterLengthLabelSegmentIndex+c)%t.numVertices,g=n?this._pathSegments[u]:this._perimeterSegments[u];if(h=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:g,sampleLocation:"center"},!this._perimeterLengthLabel.overlaps(this._areaLabel))break;h=!1}this._perimeterLengthLabel.visible=h&&i}else this._perimeterLengthLabel.visible=!1}_updateMessageBundle(){this.loadingMessages=!0,zt("esri/core/t9n/Units").then(t=>{this.messages=t,this.view&&this._update()}).finally(()=>{this.loadingMessages=!1})}};function Ms(t,e,s){return t&&e&&Ie(t,e,ze(e,s))}function Cs(t,e){return te(t,ze(t,e))}function ze(t,e){switch(e){case"metric":return Ft(t.value,t.unit);case"imperial":return Et(t.value,t.unit);default:return e}}function Ps(t,e,s){return t&&e&&Ie(t,e,bs(e,s))}function bs(t,e){const s=Vs(e);switch(s){case"metric":return Wt(t.value,t.unit);case"imperial":return Ut(t.value,t.unit);default:return s}}function Vs(t){switch(t){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers"}throw new Error("unhandled area unit")}var K;l([d()],y.prototype,"_parameters",null),l([d()],y.prototype,"view",void 0),l([d()],y.prototype,"messages",void 0),l([d()],y.prototype,"analysis",void 0),l([d()],y.prototype,"viewData",void 0),l([d()],y.prototype,"analysisViewData",void 0),l([d({readOnly:!0})],y.prototype,"areaLabel",void 0),l([d({readOnly:!0})],y.prototype,"perimeterLengthLabel",void 0),l([d()],y.prototype,"loadingMessages",void 0),l([d()],y.prototype,"visible",null),l([d()],y.prototype,"_renderUnits",null),y=l([Q("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],y),function(t){t[t.Small=12]="Small",t[t.Large=16]="Large"}(K||(K={}));const xs={validMeasurement:!1,numVertices:0,hasStagedVertex:!1,path:null,mode:null,positionsRender:null,positionsFittedWorld:null,positionsFittedRender:null,intersectingSegments:null,triangleIndices:null,areaCentroid:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null,area:null,pathLength:null,perimeterLength:null};let m=class extends Ht(ne){constructor(t){super(t),this.type="area-measurement-view-3d",this.analysis=null,this.measurementData=null,this.lastDraggedVertex=null,this.stagedPoint=null,this.mode=re.Auto}initialize(){const{analysis:t,view:e}=this;this.path=new M({view:e,areaMeasurement:t}),this.analysisVisualization=new y({view:e,analysis:t,analysisViewData:this}),this.analysisController=new R({view:e,analysis:t,analysisViewData:this})}destroy(){this.analysisController=P(this.analysisController),this.analysisVisualization=P(this.analysisVisualization),this.path.destroy()}get updating(){var t;return!!((t=this.analysisVisualization)!=null&&t.loadingMessages)}get result(){const{measurementData:t}=this;return t==null?{area:null,mode:null,perimeter:null}:t.actualMeasurementMode==="euclidean"?{area:t.area,perimeter:t.perimeterLength,mode:"euclidean"}:{area:t.geodesicArea,perimeter:t.pathLength,mode:"geodesic"}}get viewData(){return this.analysisVisualization.viewData}get validMeasurement(){return this.path.isValidPolygon}get unit(){return this.analysis.unit??this._defaultUnit}get testData(){}};l([d({readOnly:!0})],m.prototype,"type",void 0),l([d({constructOnly:!0,nonNullable:!0})],m.prototype,"analysis",void 0),l([d()],m.prototype,"updating",null),l([d()],m.prototype,"analysisVisualization",void 0),l([d()],m.prototype,"analysisController",void 0),l([d()],m.prototype,"result",null),l([d()],m.prototype,"measurementData",void 0),l([d()],m.prototype,"viewData",null),l([d()],m.prototype,"validMeasurement",null),l([d()],m.prototype,"path",void 0),l([d()],m.prototype,"lastDraggedVertex",void 0),l([d()],m.prototype,"stagedPoint",void 0),l([d()],m.prototype,"mode",void 0),l([d()],m.prototype,"unit",null),l([d(kt)],m.prototype,"_defaultUnit",void 0),m=l([Q("esri.views.3d.analysis.AreaMeasurementAnalysisView3D")],m);const Ys=m,As=Object.freeze(Object.defineProperty({__proto__:null,build:Oe},Symbol.toStringTag,{value:"Module"}));export{Ys as default};
