import{H as p,I as m,K as l,P as n,L as d,r as i,m as e,M as h,a as u}from"./index-CfghLkOD.js";import{T as c}from"./I3SMeshView3D-C6Ieg75W.js";import{l as g}from"./LayerView3D-sULG9RmJ.js";import{y}from"./LayerView-D7M_Uj7A.js";import"./languageUtils-CgjwfFgh.js";import"./TimeOnly-Ds2GIh_Z.js";import"./ImmutableArray-BPVd6ESQ.js";import"./shared-D8Zo7Tkv.js";import"./number-CT6PB8t8.js";import"./Transform-C5V52Aq9.js";import"./RenderTexture-DjT2iAr8.js";import"./I3SOverrides-BVLwl9ix.js";import"./resourceUtils-Da6Xrx-g.js";import"./I3SNode-CaeCwNL9.js";import"./I3SUtil-DQ7x5OcA.js";import"./I3SBinaryReader-BL6De4QW.js";import"./ReactiveSet-CqOLmCa9.js";import"./meshFeatureSet-B2Zljvbz.js";import"./Mesh--qqAVzJF.js";import"./MeshComponent-DcMxUFyx.js";import"./meshProperties-C4iW0Ukm.js";import"./MeshTransform-BVDzGPrh.js";import"./MeshVertexAttributes-Brlavo2I.js";import"./triangulationUtils-CTDR-pUJ.js";import"./earcut-Lltz9D9k.js";import"./deduplicate-BYZreQpf.js";import"./vertexSpaceConversion-BTg4OHZe.js";import"./vec4-BG9dGPrG.js";import"./External-dQgWVF1S.js";import"./infoFor3D-CxdEiWhp.js";import"./meshFeatureAttributes-DOy8z5z8.js";import"./SceneModification-CgZ4gt9W.js";import"./persistable-BaHJUUiM.js";import"./resourceExtension-DZ_Qb9ln.js";import"./ExtentSet-tKvS5weq.js";import"./optimizedFeatureQueryEngineAdapter-ecw-c5oW.js";import"./centroid-DdLmOD72.js";import"./PooledRBush-tQ9HncAx.js";import"./quickselect-QQC62dOK.js";import"./popupUtils-Cfa6JXbX.js";import"./WorkerHandle-BTIp4v0t.js";import"./SceneLayerWorker-BOa_9ycw.js";import"./attributeUtils-Dc8--CBJ.js";import"./highlightUtils-C504RVTz.js";import"./makeScheduleFunction-CggzEh3c.js";const f=.2;let t=class extends c(g(y)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this._applySSAO=!p("disable-feature:im-ssao"),this._shadeNormals=!!p("enable-feature:im-shading"),this.drapeTargetType=m.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var r;return((r=this._controller)==null?void 0:r.updatingProgress)??0}get lodFactor(){var r,o,a,s;return((s=(a=(o=(r=this.view)==null?void 0:r.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?f:1}get visibleAtCurrentScale(){return l(this.i3slayer.effectiveScaleRange,this.view.scale)}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),n),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){return new d({layer:this.layer,sourceLayer:this.layer})}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const r=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>r,()=>this._modifications=r.toArray(),n),"modifications")}};i([e()],t.prototype,"layer",void 0),i([e()],t.prototype,"i3slayer",null),i([e(h)],t.prototype,"updatingProgress",void 0),i([e()],t.prototype,"updatingProgressValue",null),i([e()],t.prototype,"lodFactor",null),i([e({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),i([e({readOnly:!0})],t.prototype,"visibleAtCurrentScale",null),t=i([u("esri.views.3d.layers.IntegratedMeshLayerView3D")],t);const mt=t;export{mt as default};
