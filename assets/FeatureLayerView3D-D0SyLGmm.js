import{r as p,m,a,O as s,e as i,J as l}from"./index-Dimyyb88.js";import{g as n}from"./FeatureLayerViewBase3D-tMzDXDBf.js";import"./HeatmapDensity.glsl-CYFMzBSG.js";import"./timeSupport-Brb44XUX.js";import"./utils-DSEEgd5h.js";import"./projectExtentUtils-C9UAWSXW.js";import"./geometryServiceUtils-DHnJo3V2.js";import"./dehydratedFeatureComparison-BstjLkm-.js";import"./utils-civ_g3s8.js";import"./queryForSymbologySnapping-Cg7wf-X8.js";import"./Graphics3DFeatureProcessor-BJU8lZPt.js";import"./hash-CcEbRgUF.js";import"./renderingInfoUtils-BvHjVlu9.js";import"./ExtentSet-DGhfHtDy.js";import"./optimizedFeatureQueryEngineAdapter-Buv8fp1n.js";import"./centroid-DdLmOD72.js";import"./PooledRBush-SrDdlSzG.js";import"./quickselect-QQC62dOK.js";import"./popupUtils-C4kPWITH.js";import"./Graphics3DObjectStates-dkKX4gVs.js";import"./attributeUtils-Dc8--CBJ.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./QueryEngine-CUrMk6u8.js";import"./normalizeUtils-B2FAHJTd.js";import"./normalizeUtilsCommon-CmO8aETh.js";import"./WhereClause-BLxi6xXD.js";import"./TimeOnly-DvJILcMu.js";import"./queryUtils-BAYVEVNZ.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-DjYb9CEb.js";import"./utils-Cwt62ItM.js";import"./utils-tc5Qh7dU.js";import"./utils-B9f8-mm5.js";import"./ClassBreaksDefinition-D3h_Rxwt.js";import"./SnappingCandidate-O5eRSE6e.js";import"./highlightUtils-Bk1JkGqe.js";import"./languageUtils-DGTjvUWH.js";import"./ImmutableArray-BPVd6ESQ.js";import"./shared-sDhPgbUy.js";import"./number-CVX2AGqP.js";import"./FeatureStore-CZ4_S8H7.js";import"./BoundsStore-BjR4v_Q_.js";import"./LayerView3D-BJ0_08Cz.js";import"./query-3eOHDtn7.js";import"./pbfQueryUtils-C47DNXGV.js";import"./pbf-BO9_c9-m.js";import"./WorkerHandle-UNPsaFO7.js";import"./EventedSet-Cbhlx4oa.js";import"./LayerView-Dxh7zQS5.js";import"./RefreshableLayerView-CF4wD_n_.js";let t=class extends n{constructor(){super(...arguments),this.type="feature-3d"}initialize(){var o;const{layer:e,view:r}=this;(o=s(e))!=null&&o.operations.supportsQuery||this.addResolvingPromise(Promise.reject(new i("featurelayerview:query-not-supported","layer view requires a layer with query capability",{layer:e}))),e.infoFor3D!=null&&this.addResolvingPromise(Promise.reject(new i("featurelayerview3d:unsupported-geometry-type",`Unsupported geometry type ${e.geometryType}`))),e.geometryType!=="mesh"||l(e.spatialReference,r.spatialReference)||this.addResolvingPromise(Promise.reject(new i("layerview:spatial-reference-incompatible","The spatial references of the feature layer is incompatible with the spatial reference of the view")))}get featureSpatialReference(){var e,r;return(r=(e=this.view.featureTiles)==null?void 0:e.tilingScheme)==null?void 0:r.spatialReference}};p([m()],t.prototype,"layer",void 0),t=p([a("esri.views.3d.layers.FeatureLayerView3D")],t);const ae=t;export{ae as default};
