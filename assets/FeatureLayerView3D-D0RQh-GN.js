import{r as p,m,a,O as s,e as i,J as l}from"./index-DVfovSRj.js";import{g as n}from"./FeatureLayerViewBase3D-d1lfptmL.js";import"./HeatmapDensity.glsl-nI5TKew2.js";import"./timeSupport-BKQLxddX.js";import"./utils-60qN1-Jo.js";import"./projectExtentUtils-B4UbtHZC.js";import"./geometryServiceUtils-x0pcKXl-.js";import"./dehydratedFeatureComparison-nf3ahhMS.js";import"./utils-CtoAMy3a.js";import"./queryForSymbologySnapping-qhA8nbIh.js";import"./Graphics3DFeatureProcessor-Cn9_Ippn.js";import"./hash-CcEbRgUF.js";import"./renderingInfoUtils-DKXK8SlC.js";import"./ExtentSet-CF1z7fSg.js";import"./optimizedFeatureQueryEngineAdapter-CUHFVak8.js";import"./centroid-DdLmOD72.js";import"./PooledRBush-9jWcEeT8.js";import"./quickselect-QQC62dOK.js";import"./popupUtils-BgFeWV_J.js";import"./Graphics3DObjectStates-BzzK-KTn.js";import"./attributeUtils-Dc8--CBJ.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./QueryEngine-DDNAdwwS.js";import"./normalizeUtils-DF_jogMk.js";import"./normalizeUtilsCommon-BiyL944r.js";import"./WhereClause-CTNEkBB_.js";import"./TimeOnly-CaB2FMOl.js";import"./queryUtils-CPAwv2w3.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-DjYb9CEb.js";import"./utils-BwyCV35j.js";import"./utils-BP6rtoGb.js";import"./utils-BHjltxsG.js";import"./ClassBreaksDefinition-BvfmV7JG.js";import"./SnappingCandidate-O5eRSE6e.js";import"./highlightUtils-CILTp73w.js";import"./languageUtils-B3F47s5x.js";import"./ImmutableArray-BPVd6ESQ.js";import"./shared-O4z3kOXb.js";import"./number-O-4AVrw4.js";import"./FeatureStore-Dx6l6pZs.js";import"./BoundsStore-C3hu8Q4r.js";import"./LayerView3D-CGyMXz7m.js";import"./query-DoOAVOVa.js";import"./pbfQueryUtils-BMTOH95d.js";import"./pbf-B-7SxU3I.js";import"./WorkerHandle-B4cGkC4V.js";import"./EventedSet-DfGIGARv.js";import"./LayerView-Do2Sz7my.js";import"./RefreshableLayerView-CePz44Of.js";let t=class extends n{constructor(){super(...arguments),this.type="feature-3d"}initialize(){var o;const{layer:e,view:r}=this;(o=s(e))!=null&&o.operations.supportsQuery||this.addResolvingPromise(Promise.reject(new i("featurelayerview:query-not-supported","layer view requires a layer with query capability",{layer:e}))),e.infoFor3D!=null&&this.addResolvingPromise(Promise.reject(new i("featurelayerview3d:unsupported-geometry-type",`Unsupported geometry type ${e.geometryType}`))),e.geometryType!=="mesh"||l(e.spatialReference,r.spatialReference)||this.addResolvingPromise(Promise.reject(new i("layerview:spatial-reference-incompatible","The spatial references of the feature layer is incompatible with the spatial reference of the view")))}get featureSpatialReference(){var e,r;return(r=(e=this.view.featureTiles)==null?void 0:e.tilingScheme)==null?void 0:r.spatialReference}};p([m()],t.prototype,"layer",void 0),t=p([a("esri.views.3d.layers.FeatureLayerView3D")],t);const ae=t;export{ae as default};
