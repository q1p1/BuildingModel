import{r as p,m,a,O as s,e as i,J as l}from"./index-o1YlnJfN.js";import{g as n}from"./FeatureLayerViewBase3D-COFSxhKS.js";import"./HeatmapDensity.glsl-DUrELEaJ.js";import"./timeSupport-D-dk6Icz.js";import"./utils-ZkxMPLcR.js";import"./projectExtentUtils-36xC7shI.js";import"./geometryServiceUtils-BAUy2VIU.js";import"./dehydratedFeatureComparison-B1buwPsI.js";import"./utils-0SeVuXts.js";import"./queryForSymbologySnapping-DZdwnOS7.js";import"./Graphics3DFeatureProcessor-BrPsM3Q5.js";import"./hash-CcEbRgUF.js";import"./renderingInfoUtils-ktmmmkHU.js";import"./ExtentSet-DD7OXwl7.js";import"./optimizedFeatureQueryEngineAdapter-DpEaV7lA.js";import"./centroid-DdLmOD72.js";import"./PooledRBush-DBb0ZV5T.js";import"./quickselect-QQC62dOK.js";import"./popupUtils-SXerIdZw.js";import"./Graphics3DObjectStates-jzZKEJhX.js";import"./attributeUtils-Dc8--CBJ.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./QueryEngine-H24p4j5v.js";import"./normalizeUtils-BKKxXnAl.js";import"./normalizeUtilsCommon-GUsSyN-7.js";import"./WhereClause-D3omL7Ei.js";import"./TimeOnly-McfML5qi.js";import"./queryUtils-jG57mzYT.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-DjYb9CEb.js";import"./utils-C7v7z5kN.js";import"./utils-Dk0bni7M.js";import"./utils-CFGcrMp1.js";import"./ClassBreaksDefinition-Bnwy4611.js";import"./SnappingCandidate-O5eRSE6e.js";import"./highlightUtils-DyIL-Fbm.js";import"./languageUtils-BvsBK8l7.js";import"./ImmutableArray-BPVd6ESQ.js";import"./shared-D0Ngbq-V.js";import"./number-DL764I2y.js";import"./FeatureStore-DP3lPv5D.js";import"./BoundsStore-Bh5fcG6z.js";import"./LayerView3D-BFjuH-u8.js";import"./query-Cu6heS7C.js";import"./pbfQueryUtils-Bi8YkinU.js";import"./pbf-vZK5LHgF.js";import"./WorkerHandle-DkJRh4Q0.js";import"./EventedSet-BwlkR-_w.js";import"./LayerView-x-J1AHNo.js";import"./RefreshableLayerView-COmEoc_u.js";let t=class extends n{constructor(){super(...arguments),this.type="feature-3d"}initialize(){var o;const{layer:e,view:r}=this;(o=s(e))!=null&&o.operations.supportsQuery||this.addResolvingPromise(Promise.reject(new i("featurelayerview:query-not-supported","layer view requires a layer with query capability",{layer:e}))),e.infoFor3D!=null&&this.addResolvingPromise(Promise.reject(new i("featurelayerview3d:unsupported-geometry-type",`Unsupported geometry type ${e.geometryType}`))),e.geometryType!=="mesh"||l(e.spatialReference,r.spatialReference)||this.addResolvingPromise(Promise.reject(new i("layerview:spatial-reference-incompatible","The spatial references of the feature layer is incompatible with the spatial reference of the view")))}get featureSpatialReference(){var e,r;return(r=(e=this.view.featureTiles)==null?void 0:e.tilingScheme)==null?void 0:r.spatialReference}};p([m()],t.prototype,"layer",void 0),t=p([a("esri.views.3d.layers.FeatureLayerView3D")],t);const ae=t;export{ae as default};
